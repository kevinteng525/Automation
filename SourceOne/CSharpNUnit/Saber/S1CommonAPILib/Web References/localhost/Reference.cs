//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace Saber.S1CommonAPILib.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ExSearchWebServiceSoap", Namespace="http://EMC.com/ExSearchWebService")]
    public partial class ExSearchWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AuthenticateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserDistinguishedNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasDelegateAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchExOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchAsDelegateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchAsDelegateExOperationCompleted;
        
        private System.Threading.SendOrPostCallback StopSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNumResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPagedResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnselectResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectAllResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnselectAllResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNumSelectedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNumSelectedFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlatformTypesOfSelectedItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFoldersofSelectedFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsVirtualFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestoreResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestoreResultsExOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestoreResults2OperationCompleted;
        
        private System.Threading.SendOrPostCallback RestoreResultsEx2OperationCompleted;
        
        private System.Threading.SendOrPostCallback RestoreResultsEx3OperationCompleted;
        
        private System.Threading.SendOrPostCallback RestoreResultsExSPOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteResultsExOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteResultsEx2OperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteResultsEx3OperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportResultsExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatusDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQueryStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumerateQueriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUserSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastRunQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveLastRunQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumerateArchiveFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumerateArchiveFoldersAsDelegateOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumerateArchiveFolders2OperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumerateArchiveFoldersAsDelegate2OperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumerateMailboxFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumerateMailboxSubFoldersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchNotesAddressBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnumerateNotesAddressBooksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNotesAddressBookEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchExchangeAddressBookOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResolveEmailAddressesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultErrorCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetExpireTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetXmlFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArchivedFolderHierarchyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ExSearchWebService() {
            this.Url = global::S1CommonAPILib.Properties.Settings.Default.S1CommonAPILib_localhost_ExSearchWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AuthenticateUserCompletedEventHandler AuthenticateUserCompleted;
        
        /// <remarks/>
        public event GetUserDistinguishedNameCompletedEventHandler GetUserDistinguishedNameCompleted;
        
        /// <remarks/>
        public event HasDelegateAccessCompletedEventHandler HasDelegateAccessCompleted;
        
        /// <remarks/>
        public event SearchCompletedEventHandler SearchCompleted;
        
        /// <remarks/>
        public event SearchExCompletedEventHandler SearchExCompleted;
        
        /// <remarks/>
        public event SearchAsDelegateCompletedEventHandler SearchAsDelegateCompleted;
        
        /// <remarks/>
        public event SearchAsDelegateExCompletedEventHandler SearchAsDelegateExCompleted;
        
        /// <remarks/>
        public event StopSearchCompletedEventHandler StopSearchCompleted;
        
        /// <remarks/>
        public event GetNumResultsCompletedEventHandler GetNumResultsCompleted;
        
        /// <remarks/>
        public event GetPagedResultsCompletedEventHandler GetPagedResultsCompleted;
        
        /// <remarks/>
        public event SelectResultsCompletedEventHandler SelectResultsCompleted;
        
        /// <remarks/>
        public event UnselectResultsCompletedEventHandler UnselectResultsCompleted;
        
        /// <remarks/>
        public event SelectAllResultsCompletedEventHandler SelectAllResultsCompleted;
        
        /// <remarks/>
        public event UnselectAllResultsCompletedEventHandler UnselectAllResultsCompleted;
        
        /// <remarks/>
        public event GetNumSelectedCompletedEventHandler GetNumSelectedCompleted;
        
        /// <remarks/>
        public event GetNumSelectedFilesCompletedEventHandler GetNumSelectedFilesCompleted;
        
        /// <remarks/>
        public event GetPlatformTypesOfSelectedItemsCompletedEventHandler GetPlatformTypesOfSelectedItemsCompleted;
        
        /// <remarks/>
        public event GetFoldersofSelectedFilesCompletedEventHandler GetFoldersofSelectedFilesCompleted;
        
        /// <remarks/>
        public event IsVirtualFolderCompletedEventHandler IsVirtualFolderCompleted;
        
        /// <remarks/>
        public event IsOrganizationCompletedEventHandler IsOrganizationCompleted;
        
        /// <remarks/>
        public event RestoreResultsCompletedEventHandler RestoreResultsCompleted;
        
        /// <remarks/>
        public event RestoreResultsExCompletedEventHandler RestoreResultsExCompleted;
        
        /// <remarks/>
        public event RestoreResults2CompletedEventHandler RestoreResults2Completed;
        
        /// <remarks/>
        public event RestoreResultsEx2CompletedEventHandler RestoreResultsEx2Completed;
        
        /// <remarks/>
        public event RestoreResultsEx3CompletedEventHandler RestoreResultsEx3Completed;
        
        /// <remarks/>
        public event RestoreResultsExSPCompletedEventHandler RestoreResultsExSPCompleted;
        
        /// <remarks/>
        public event DeleteResultsCompletedEventHandler DeleteResultsCompleted;
        
        /// <remarks/>
        public event DeleteResultsExCompletedEventHandler DeleteResultsExCompleted;
        
        /// <remarks/>
        public event DeleteResultsEx2CompletedEventHandler DeleteResultsEx2Completed;
        
        /// <remarks/>
        public event DeleteResultsEx3CompletedEventHandler DeleteResultsEx3Completed;
        
        /// <remarks/>
        public event ExportResultsCompletedEventHandler ExportResultsCompleted;
        
        /// <remarks/>
        public event ExportResultsExCompletedEventHandler ExportResultsExCompleted;
        
        /// <remarks/>
        public event GetStatusDetailsCompletedEventHandler GetStatusDetailsCompleted;
        
        /// <remarks/>
        public event ReleaseResultsCompletedEventHandler ReleaseResultsCompleted;
        
        /// <remarks/>
        public event GetStatusCompletedEventHandler GetStatusCompleted;
        
        /// <remarks/>
        public event GetQueryStatusCompletedEventHandler GetQueryStatusCompleted;
        
        /// <remarks/>
        public event EnumerateQueriesCompletedEventHandler EnumerateQueriesCompleted;
        
        /// <remarks/>
        public event GetUserSettingsCompletedEventHandler GetUserSettingsCompleted;
        
        /// <remarks/>
        public event SaveUserSettingsCompletedEventHandler SaveUserSettingsCompleted;
        
        /// <remarks/>
        public event GetLastRunQueryCompletedEventHandler GetLastRunQueryCompleted;
        
        /// <remarks/>
        public event SaveLastRunQueryCompletedEventHandler SaveLastRunQueryCompleted;
        
        /// <remarks/>
        public event AddQueryCompletedEventHandler AddQueryCompleted;
        
        /// <remarks/>
        public event ModifyQueryCompletedEventHandler ModifyQueryCompleted;
        
        /// <remarks/>
        public event DeleteQueryCompletedEventHandler DeleteQueryCompleted;
        
        /// <remarks/>
        public event EnumerateArchiveFoldersCompletedEventHandler EnumerateArchiveFoldersCompleted;
        
        /// <remarks/>
        public event EnumerateArchiveFoldersAsDelegateCompletedEventHandler EnumerateArchiveFoldersAsDelegateCompleted;
        
        /// <remarks/>
        public event EnumerateArchiveFolders2CompletedEventHandler EnumerateArchiveFolders2Completed;
        
        /// <remarks/>
        public event EnumerateArchiveFoldersAsDelegate2CompletedEventHandler EnumerateArchiveFoldersAsDelegate2Completed;
        
        /// <remarks/>
        public event EnumerateMailboxFoldersCompletedEventHandler EnumerateMailboxFoldersCompleted;
        
        /// <remarks/>
        public event EnumerateMailboxSubFoldersCompletedEventHandler EnumerateMailboxSubFoldersCompleted;
        
        /// <remarks/>
        public event SearchNotesAddressBookCompletedEventHandler SearchNotesAddressBookCompleted;
        
        /// <remarks/>
        public event EnumerateNotesAddressBooksCompletedEventHandler EnumerateNotesAddressBooksCompleted;
        
        /// <remarks/>
        public event GetNotesAddressBookEntriesCompletedEventHandler GetNotesAddressBookEntriesCompleted;
        
        /// <remarks/>
        public event SearchExchangeAddressBookCompletedEventHandler SearchExchangeAddressBookCompleted;
        
        /// <remarks/>
        public event ResolveEmailAddressesCompletedEventHandler ResolveEmailAddressesCompleted;
        
        /// <remarks/>
        public event GetDefaultErrorCodeCompletedEventHandler GetDefaultErrorCodeCompleted;
        
        /// <remarks/>
        public event GetServerConfigurationCompletedEventHandler GetServerConfigurationCompleted;
        
        /// <remarks/>
        public event SetExpireTimeCompletedEventHandler SetExpireTimeCompleted;
        
        /// <remarks/>
        public event GetXmlFileCompletedEventHandler GetXmlFileCompleted;
        
        /// <remarks/>
        public event GetUserInfoCompletedEventHandler GetUserInfoCompleted;
        
        /// <remarks/>
        public event GetArchivedFolderHierarchyCompletedEventHandler GetArchivedFolderHierarchyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/AuthenticateUser", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AuthenticateUser() {
            object[] results = this.Invoke("AuthenticateUser", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync() {
            this.AuthenticateUserAsync(null);
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(object userState) {
            if ((this.AuthenticateUserOperationCompleted == null)) {
                this.AuthenticateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateUserOperationCompleted);
            }
            this.InvokeAsync("AuthenticateUser", new object[0], this.AuthenticateUserOperationCompleted, userState);
        }
        
        private void OnAuthenticateUserOperationCompleted(object arg) {
            if ((this.AuthenticateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateUserCompleted(this, new AuthenticateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/GetUserDistinguishedName", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserDistinguishedName() {
            object[] results = this.Invoke("GetUserDistinguishedName", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserDistinguishedNameAsync() {
            this.GetUserDistinguishedNameAsync(null);
        }
        
        /// <remarks/>
        public void GetUserDistinguishedNameAsync(object userState) {
            if ((this.GetUserDistinguishedNameOperationCompleted == null)) {
                this.GetUserDistinguishedNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserDistinguishedNameOperationCompleted);
            }
            this.InvokeAsync("GetUserDistinguishedName", new object[0], this.GetUserDistinguishedNameOperationCompleted, userState);
        }
        
        private void OnGetUserDistinguishedNameOperationCompleted(object arg) {
            if ((this.GetUserDistinguishedNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserDistinguishedNameCompleted(this, new GetUserDistinguishedNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/HasDelegateAccess", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasDelegateAccess(string DN) {
            object[] results = this.Invoke("HasDelegateAccess", new object[] {
                        DN});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasDelegateAccessAsync(string DN) {
            this.HasDelegateAccessAsync(DN, null);
        }
        
        /// <remarks/>
        public void HasDelegateAccessAsync(string DN, object userState) {
            if ((this.HasDelegateAccessOperationCompleted == null)) {
                this.HasDelegateAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasDelegateAccessOperationCompleted);
            }
            this.InvokeAsync("HasDelegateAccess", new object[] {
                        DN}, this.HasDelegateAccessOperationCompleted, userState);
        }
        
        private void OnHasDelegateAccessOperationCompleted(object arg) {
            if ((this.HasDelegateAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasDelegateAccessCompleted(this, new HasDelegateAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/Search", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Search(string query, string scope, ExSearchType searchtype, int maxHits, bool removeDuplicates, bool searchEmbedded, int timeout) {
            object[] results = this.Invoke("Search", new object[] {
                        query,
                        scope,
                        searchtype,
                        maxHits,
                        removeDuplicates,
                        searchEmbedded,
                        timeout});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchAsync(string query, string scope, ExSearchType searchtype, int maxHits, bool removeDuplicates, bool searchEmbedded, int timeout) {
            this.SearchAsync(query, scope, searchtype, maxHits, removeDuplicates, searchEmbedded, timeout, null);
        }
        
        /// <remarks/>
        public void SearchAsync(string query, string scope, ExSearchType searchtype, int maxHits, bool removeDuplicates, bool searchEmbedded, int timeout, object userState) {
            if ((this.SearchOperationCompleted == null)) {
                this.SearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchOperationCompleted);
            }
            this.InvokeAsync("Search", new object[] {
                        query,
                        scope,
                        searchtype,
                        maxHits,
                        removeDuplicates,
                        searchEmbedded,
                        timeout}, this.SearchOperationCompleted, userState);
        }
        
        private void OnSearchOperationCompleted(object arg) {
            if ((this.SearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchCompleted(this, new SearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/SearchEx", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearchEx(string query, string scope, string resultAttrs, string additionalOwners, string options, ExSearchType searchtype, int maxHits, bool removeDuplicates, bool searchEmbedded, int timeout) {
            object[] results = this.Invoke("SearchEx", new object[] {
                        query,
                        scope,
                        resultAttrs,
                        additionalOwners,
                        options,
                        searchtype,
                        maxHits,
                        removeDuplicates,
                        searchEmbedded,
                        timeout});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchExAsync(string query, string scope, string resultAttrs, string additionalOwners, string options, ExSearchType searchtype, int maxHits, bool removeDuplicates, bool searchEmbedded, int timeout) {
            this.SearchExAsync(query, scope, resultAttrs, additionalOwners, options, searchtype, maxHits, removeDuplicates, searchEmbedded, timeout, null);
        }
        
        /// <remarks/>
        public void SearchExAsync(string query, string scope, string resultAttrs, string additionalOwners, string options, ExSearchType searchtype, int maxHits, bool removeDuplicates, bool searchEmbedded, int timeout, object userState) {
            if ((this.SearchExOperationCompleted == null)) {
                this.SearchExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchExOperationCompleted);
            }
            this.InvokeAsync("SearchEx", new object[] {
                        query,
                        scope,
                        resultAttrs,
                        additionalOwners,
                        options,
                        searchtype,
                        maxHits,
                        removeDuplicates,
                        searchEmbedded,
                        timeout}, this.SearchExOperationCompleted, userState);
        }
        
        private void OnSearchExOperationCompleted(object arg) {
            if ((this.SearchExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchExCompleted(this, new SearchExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/SearchAsDelegate", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearchAsDelegate(string query, string scope, ExSearchType searchtype, int maxHits, bool removeDuplicates, bool searchEmbedded, int timeout, string DN) {
            object[] results = this.Invoke("SearchAsDelegate", new object[] {
                        query,
                        scope,
                        searchtype,
                        maxHits,
                        removeDuplicates,
                        searchEmbedded,
                        timeout,
                        DN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchAsDelegateAsync(string query, string scope, ExSearchType searchtype, int maxHits, bool removeDuplicates, bool searchEmbedded, int timeout, string DN) {
            this.SearchAsDelegateAsync(query, scope, searchtype, maxHits, removeDuplicates, searchEmbedded, timeout, DN, null);
        }
        
        /// <remarks/>
        public void SearchAsDelegateAsync(string query, string scope, ExSearchType searchtype, int maxHits, bool removeDuplicates, bool searchEmbedded, int timeout, string DN, object userState) {
            if ((this.SearchAsDelegateOperationCompleted == null)) {
                this.SearchAsDelegateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchAsDelegateOperationCompleted);
            }
            this.InvokeAsync("SearchAsDelegate", new object[] {
                        query,
                        scope,
                        searchtype,
                        maxHits,
                        removeDuplicates,
                        searchEmbedded,
                        timeout,
                        DN}, this.SearchAsDelegateOperationCompleted, userState);
        }
        
        private void OnSearchAsDelegateOperationCompleted(object arg) {
            if ((this.SearchAsDelegateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchAsDelegateCompleted(this, new SearchAsDelegateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/SearchAsDelegateEx", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearchAsDelegateEx(string query, string scope, string resultAttrs, string additionalOwners, string options, ExSearchType searchtype, int maxHits, bool removeDuplicates, bool searchEmbedded, int timeout, string DN) {
            object[] results = this.Invoke("SearchAsDelegateEx", new object[] {
                        query,
                        scope,
                        resultAttrs,
                        additionalOwners,
                        options,
                        searchtype,
                        maxHits,
                        removeDuplicates,
                        searchEmbedded,
                        timeout,
                        DN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchAsDelegateExAsync(string query, string scope, string resultAttrs, string additionalOwners, string options, ExSearchType searchtype, int maxHits, bool removeDuplicates, bool searchEmbedded, int timeout, string DN) {
            this.SearchAsDelegateExAsync(query, scope, resultAttrs, additionalOwners, options, searchtype, maxHits, removeDuplicates, searchEmbedded, timeout, DN, null);
        }
        
        /// <remarks/>
        public void SearchAsDelegateExAsync(string query, string scope, string resultAttrs, string additionalOwners, string options, ExSearchType searchtype, int maxHits, bool removeDuplicates, bool searchEmbedded, int timeout, string DN, object userState) {
            if ((this.SearchAsDelegateExOperationCompleted == null)) {
                this.SearchAsDelegateExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchAsDelegateExOperationCompleted);
            }
            this.InvokeAsync("SearchAsDelegateEx", new object[] {
                        query,
                        scope,
                        resultAttrs,
                        additionalOwners,
                        options,
                        searchtype,
                        maxHits,
                        removeDuplicates,
                        searchEmbedded,
                        timeout,
                        DN}, this.SearchAsDelegateExOperationCompleted, userState);
        }
        
        private void OnSearchAsDelegateExOperationCompleted(object arg) {
            if ((this.SearchAsDelegateExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchAsDelegateExCompleted(this, new SearchAsDelegateExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/StopSearch", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StopSearch(string queryid) {
            this.Invoke("StopSearch", new object[] {
                        queryid});
        }
        
        /// <remarks/>
        public void StopSearchAsync(string queryid) {
            this.StopSearchAsync(queryid, null);
        }
        
        /// <remarks/>
        public void StopSearchAsync(string queryid, object userState) {
            if ((this.StopSearchOperationCompleted == null)) {
                this.StopSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopSearchOperationCompleted);
            }
            this.InvokeAsync("StopSearch", new object[] {
                        queryid}, this.StopSearchOperationCompleted, userState);
        }
        
        private void OnStopSearchOperationCompleted(object arg) {
            if ((this.StopSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StopSearchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/GetNumResults", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetNumResults(string queryid) {
            object[] results = this.Invoke("GetNumResults", new object[] {
                        queryid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetNumResultsAsync(string queryid) {
            this.GetNumResultsAsync(queryid, null);
        }
        
        /// <remarks/>
        public void GetNumResultsAsync(string queryid, object userState) {
            if ((this.GetNumResultsOperationCompleted == null)) {
                this.GetNumResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNumResultsOperationCompleted);
            }
            this.InvokeAsync("GetNumResults", new object[] {
                        queryid}, this.GetNumResultsOperationCompleted, userState);
        }
        
        private void OnGetNumResultsOperationCompleted(object arg) {
            if ((this.GetNumResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNumResultsCompleted(this, new GetNumResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/GetPagedResults", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPagedResults(string queryid, string sortColumn, int startindex, int pagesize) {
            object[] results = this.Invoke("GetPagedResults", new object[] {
                        queryid,
                        sortColumn,
                        startindex,
                        pagesize});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPagedResultsAsync(string queryid, string sortColumn, int startindex, int pagesize) {
            this.GetPagedResultsAsync(queryid, sortColumn, startindex, pagesize, null);
        }
        
        /// <remarks/>
        public void GetPagedResultsAsync(string queryid, string sortColumn, int startindex, int pagesize, object userState) {
            if ((this.GetPagedResultsOperationCompleted == null)) {
                this.GetPagedResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPagedResultsOperationCompleted);
            }
            this.InvokeAsync("GetPagedResults", new object[] {
                        queryid,
                        sortColumn,
                        startindex,
                        pagesize}, this.GetPagedResultsOperationCompleted, userState);
        }
        
        private void OnGetPagedResultsOperationCompleted(object arg) {
            if ((this.GetPagedResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPagedResultsCompleted(this, new GetPagedResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/SelectResults", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectResults(string queryid, int[] resultIds) {
            object[] results = this.Invoke("SelectResults", new object[] {
                        queryid,
                        resultIds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectResultsAsync(string queryid, int[] resultIds) {
            this.SelectResultsAsync(queryid, resultIds, null);
        }
        
        /// <remarks/>
        public void SelectResultsAsync(string queryid, int[] resultIds, object userState) {
            if ((this.SelectResultsOperationCompleted == null)) {
                this.SelectResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectResultsOperationCompleted);
            }
            this.InvokeAsync("SelectResults", new object[] {
                        queryid,
                        resultIds}, this.SelectResultsOperationCompleted, userState);
        }
        
        private void OnSelectResultsOperationCompleted(object arg) {
            if ((this.SelectResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectResultsCompleted(this, new SelectResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/UnselectResults", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UnselectResults(string queryid, int[] resultIds) {
            object[] results = this.Invoke("UnselectResults", new object[] {
                        queryid,
                        resultIds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnselectResultsAsync(string queryid, int[] resultIds) {
            this.UnselectResultsAsync(queryid, resultIds, null);
        }
        
        /// <remarks/>
        public void UnselectResultsAsync(string queryid, int[] resultIds, object userState) {
            if ((this.UnselectResultsOperationCompleted == null)) {
                this.UnselectResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnselectResultsOperationCompleted);
            }
            this.InvokeAsync("UnselectResults", new object[] {
                        queryid,
                        resultIds}, this.UnselectResultsOperationCompleted, userState);
        }
        
        private void OnUnselectResultsOperationCompleted(object arg) {
            if ((this.UnselectResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnselectResultsCompleted(this, new UnselectResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/SelectAllResults", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectAllResults(string queryid) {
            object[] results = this.Invoke("SelectAllResults", new object[] {
                        queryid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectAllResultsAsync(string queryid) {
            this.SelectAllResultsAsync(queryid, null);
        }
        
        /// <remarks/>
        public void SelectAllResultsAsync(string queryid, object userState) {
            if ((this.SelectAllResultsOperationCompleted == null)) {
                this.SelectAllResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectAllResultsOperationCompleted);
            }
            this.InvokeAsync("SelectAllResults", new object[] {
                        queryid}, this.SelectAllResultsOperationCompleted, userState);
        }
        
        private void OnSelectAllResultsOperationCompleted(object arg) {
            if ((this.SelectAllResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectAllResultsCompleted(this, new SelectAllResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/UnselectAllResults", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UnselectAllResults(string queryid) {
            object[] results = this.Invoke("UnselectAllResults", new object[] {
                        queryid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnselectAllResultsAsync(string queryid) {
            this.UnselectAllResultsAsync(queryid, null);
        }
        
        /// <remarks/>
        public void UnselectAllResultsAsync(string queryid, object userState) {
            if ((this.UnselectAllResultsOperationCompleted == null)) {
                this.UnselectAllResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnselectAllResultsOperationCompleted);
            }
            this.InvokeAsync("UnselectAllResults", new object[] {
                        queryid}, this.UnselectAllResultsOperationCompleted, userState);
        }
        
        private void OnUnselectAllResultsOperationCompleted(object arg) {
            if ((this.UnselectAllResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnselectAllResultsCompleted(this, new UnselectAllResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/GetNumSelected", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetNumSelected(string queryid) {
            object[] results = this.Invoke("GetNumSelected", new object[] {
                        queryid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetNumSelectedAsync(string queryid) {
            this.GetNumSelectedAsync(queryid, null);
        }
        
        /// <remarks/>
        public void GetNumSelectedAsync(string queryid, object userState) {
            if ((this.GetNumSelectedOperationCompleted == null)) {
                this.GetNumSelectedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNumSelectedOperationCompleted);
            }
            this.InvokeAsync("GetNumSelected", new object[] {
                        queryid}, this.GetNumSelectedOperationCompleted, userState);
        }
        
        private void OnGetNumSelectedOperationCompleted(object arg) {
            if ((this.GetNumSelectedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNumSelectedCompleted(this, new GetNumSelectedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/GetNumSelectedFiles", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetNumSelectedFiles(string queryid) {
            object[] results = this.Invoke("GetNumSelectedFiles", new object[] {
                        queryid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetNumSelectedFilesAsync(string queryid) {
            this.GetNumSelectedFilesAsync(queryid, null);
        }
        
        /// <remarks/>
        public void GetNumSelectedFilesAsync(string queryid, object userState) {
            if ((this.GetNumSelectedFilesOperationCompleted == null)) {
                this.GetNumSelectedFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNumSelectedFilesOperationCompleted);
            }
            this.InvokeAsync("GetNumSelectedFiles", new object[] {
                        queryid}, this.GetNumSelectedFilesOperationCompleted, userState);
        }
        
        private void OnGetNumSelectedFilesOperationCompleted(object arg) {
            if ((this.GetNumSelectedFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNumSelectedFilesCompleted(this, new GetNumSelectedFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/GetPlatformTypesOfSelectedItems", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetPlatformTypesOfSelectedItems(string queryid, string platformFieldName) {
            object[] results = this.Invoke("GetPlatformTypesOfSelectedItems", new object[] {
                        queryid,
                        platformFieldName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPlatformTypesOfSelectedItemsAsync(string queryid, string platformFieldName) {
            this.GetPlatformTypesOfSelectedItemsAsync(queryid, platformFieldName, null);
        }
        
        /// <remarks/>
        public void GetPlatformTypesOfSelectedItemsAsync(string queryid, string platformFieldName, object userState) {
            if ((this.GetPlatformTypesOfSelectedItemsOperationCompleted == null)) {
                this.GetPlatformTypesOfSelectedItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlatformTypesOfSelectedItemsOperationCompleted);
            }
            this.InvokeAsync("GetPlatformTypesOfSelectedItems", new object[] {
                        queryid,
                        platformFieldName}, this.GetPlatformTypesOfSelectedItemsOperationCompleted, userState);
        }
        
        private void OnGetPlatformTypesOfSelectedItemsOperationCompleted(object arg) {
            if ((this.GetPlatformTypesOfSelectedItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlatformTypesOfSelectedItemsCompleted(this, new GetPlatformTypesOfSelectedItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/GetFoldersofSelectedFiles", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetFoldersofSelectedFiles(string queryid) {
            object[] results = this.Invoke("GetFoldersofSelectedFiles", new object[] {
                        queryid});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFoldersofSelectedFilesAsync(string queryid) {
            this.GetFoldersofSelectedFilesAsync(queryid, null);
        }
        
        /// <remarks/>
        public void GetFoldersofSelectedFilesAsync(string queryid, object userState) {
            if ((this.GetFoldersofSelectedFilesOperationCompleted == null)) {
                this.GetFoldersofSelectedFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFoldersofSelectedFilesOperationCompleted);
            }
            this.InvokeAsync("GetFoldersofSelectedFiles", new object[] {
                        queryid}, this.GetFoldersofSelectedFilesOperationCompleted, userState);
        }
        
        private void OnGetFoldersofSelectedFilesOperationCompleted(object arg) {
            if ((this.GetFoldersofSelectedFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFoldersofSelectedFilesCompleted(this, new GetFoldersofSelectedFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/IsVirtualFolder", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsVirtualFolder(string folderName) {
            object[] results = this.Invoke("IsVirtualFolder", new object[] {
                        folderName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsVirtualFolderAsync(string folderName) {
            this.IsVirtualFolderAsync(folderName, null);
        }
        
        /// <remarks/>
        public void IsVirtualFolderAsync(string folderName, object userState) {
            if ((this.IsVirtualFolderOperationCompleted == null)) {
                this.IsVirtualFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsVirtualFolderOperationCompleted);
            }
            this.InvokeAsync("IsVirtualFolder", new object[] {
                        folderName}, this.IsVirtualFolderOperationCompleted, userState);
        }
        
        private void OnIsVirtualFolderOperationCompleted(object arg) {
            if ((this.IsVirtualFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsVirtualFolderCompleted(this, new IsVirtualFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/IsOrganization", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsOrganization(string folderName) {
            object[] results = this.Invoke("IsOrganization", new object[] {
                        folderName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsOrganizationAsync(string folderName) {
            this.IsOrganizationAsync(folderName, null);
        }
        
        /// <remarks/>
        public void IsOrganizationAsync(string folderName, object userState) {
            if ((this.IsOrganizationOperationCompleted == null)) {
                this.IsOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsOrganizationOperationCompleted);
            }
            this.InvokeAsync("IsOrganization", new object[] {
                        folderName}, this.IsOrganizationOperationCompleted, userState);
        }
        
        private void OnIsOrganizationOperationCompleted(object arg) {
            if ((this.IsOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsOrganizationCompleted(this, new IsOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/RestoreResults", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RestoreResults(string resultsQueryid, string outputSource) {
            object[] results = this.Invoke("RestoreResults", new object[] {
                        resultsQueryid,
                        outputSource});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RestoreResultsAsync(string resultsQueryid, string outputSource) {
            this.RestoreResultsAsync(resultsQueryid, outputSource, null);
        }
        
        /// <remarks/>
        public void RestoreResultsAsync(string resultsQueryid, string outputSource, object userState) {
            if ((this.RestoreResultsOperationCompleted == null)) {
                this.RestoreResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreResultsOperationCompleted);
            }
            this.InvokeAsync("RestoreResults", new object[] {
                        resultsQueryid,
                        outputSource}, this.RestoreResultsOperationCompleted, userState);
        }
        
        private void OnRestoreResultsOperationCompleted(object arg) {
            if ((this.RestoreResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreResultsCompleted(this, new RestoreResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/RestoreResultsEx", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RestoreResultsEx(string resultsQueryid, string inputSource, string outputSource, string entryIdResultColName, string folderResultColName, int timeout) {
            object[] results = this.Invoke("RestoreResultsEx", new object[] {
                        resultsQueryid,
                        inputSource,
                        outputSource,
                        entryIdResultColName,
                        folderResultColName,
                        timeout});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RestoreResultsExAsync(string resultsQueryid, string inputSource, string outputSource, string entryIdResultColName, string folderResultColName, int timeout) {
            this.RestoreResultsExAsync(resultsQueryid, inputSource, outputSource, entryIdResultColName, folderResultColName, timeout, null);
        }
        
        /// <remarks/>
        public void RestoreResultsExAsync(string resultsQueryid, string inputSource, string outputSource, string entryIdResultColName, string folderResultColName, int timeout, object userState) {
            if ((this.RestoreResultsExOperationCompleted == null)) {
                this.RestoreResultsExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreResultsExOperationCompleted);
            }
            this.InvokeAsync("RestoreResultsEx", new object[] {
                        resultsQueryid,
                        inputSource,
                        outputSource,
                        entryIdResultColName,
                        folderResultColName,
                        timeout}, this.RestoreResultsExOperationCompleted, userState);
        }
        
        private void OnRestoreResultsExOperationCompleted(object arg) {
            if ((this.RestoreResultsExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreResultsExCompleted(this, new RestoreResultsExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/RestoreResults2", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RestoreResults2(string resultsQueryid, string outputSource, ExSearchType type) {
            object[] results = this.Invoke("RestoreResults2", new object[] {
                        resultsQueryid,
                        outputSource,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RestoreResults2Async(string resultsQueryid, string outputSource, ExSearchType type) {
            this.RestoreResults2Async(resultsQueryid, outputSource, type, null);
        }
        
        /// <remarks/>
        public void RestoreResults2Async(string resultsQueryid, string outputSource, ExSearchType type, object userState) {
            if ((this.RestoreResults2OperationCompleted == null)) {
                this.RestoreResults2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreResults2OperationCompleted);
            }
            this.InvokeAsync("RestoreResults2", new object[] {
                        resultsQueryid,
                        outputSource,
                        type}, this.RestoreResults2OperationCompleted, userState);
        }
        
        private void OnRestoreResults2OperationCompleted(object arg) {
            if ((this.RestoreResults2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreResults2Completed(this, new RestoreResults2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/RestoreResultsEx2", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RestoreResultsEx2(string resultsQueryid, string inputSource, string outputSource, string entryIdResultColName, string folderResultColName, int timeout, ExSearchType searchtype) {
            object[] results = this.Invoke("RestoreResultsEx2", new object[] {
                        resultsQueryid,
                        inputSource,
                        outputSource,
                        entryIdResultColName,
                        folderResultColName,
                        timeout,
                        searchtype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RestoreResultsEx2Async(string resultsQueryid, string inputSource, string outputSource, string entryIdResultColName, string folderResultColName, int timeout, ExSearchType searchtype) {
            this.RestoreResultsEx2Async(resultsQueryid, inputSource, outputSource, entryIdResultColName, folderResultColName, timeout, searchtype, null);
        }
        
        /// <remarks/>
        public void RestoreResultsEx2Async(string resultsQueryid, string inputSource, string outputSource, string entryIdResultColName, string folderResultColName, int timeout, ExSearchType searchtype, object userState) {
            if ((this.RestoreResultsEx2OperationCompleted == null)) {
                this.RestoreResultsEx2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreResultsEx2OperationCompleted);
            }
            this.InvokeAsync("RestoreResultsEx2", new object[] {
                        resultsQueryid,
                        inputSource,
                        outputSource,
                        entryIdResultColName,
                        folderResultColName,
                        timeout,
                        searchtype}, this.RestoreResultsEx2OperationCompleted, userState);
        }
        
        private void OnRestoreResultsEx2OperationCompleted(object arg) {
            if ((this.RestoreResultsEx2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreResultsEx2Completed(this, new RestoreResultsEx2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/RestoreResultsEx3", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RestoreResultsEx3(string resultsQueryid, string inputSource, string outputSource, string entryIdResultColName, string folderResultColName, int timeout, ExSearchType searchtype, string scriptToCreateItemWeight, string scriptToCreateTempTable, ExTaskType taskType) {
            object[] results = this.Invoke("RestoreResultsEx3", new object[] {
                        resultsQueryid,
                        inputSource,
                        outputSource,
                        entryIdResultColName,
                        folderResultColName,
                        timeout,
                        searchtype,
                        scriptToCreateItemWeight,
                        scriptToCreateTempTable,
                        taskType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RestoreResultsEx3Async(string resultsQueryid, string inputSource, string outputSource, string entryIdResultColName, string folderResultColName, int timeout, ExSearchType searchtype, string scriptToCreateItemWeight, string scriptToCreateTempTable, ExTaskType taskType) {
            this.RestoreResultsEx3Async(resultsQueryid, inputSource, outputSource, entryIdResultColName, folderResultColName, timeout, searchtype, scriptToCreateItemWeight, scriptToCreateTempTable, taskType, null);
        }
        
        /// <remarks/>
        public void RestoreResultsEx3Async(string resultsQueryid, string inputSource, string outputSource, string entryIdResultColName, string folderResultColName, int timeout, ExSearchType searchtype, string scriptToCreateItemWeight, string scriptToCreateTempTable, ExTaskType taskType, object userState) {
            if ((this.RestoreResultsEx3OperationCompleted == null)) {
                this.RestoreResultsEx3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreResultsEx3OperationCompleted);
            }
            this.InvokeAsync("RestoreResultsEx3", new object[] {
                        resultsQueryid,
                        inputSource,
                        outputSource,
                        entryIdResultColName,
                        folderResultColName,
                        timeout,
                        searchtype,
                        scriptToCreateItemWeight,
                        scriptToCreateTempTable,
                        taskType}, this.RestoreResultsEx3OperationCompleted, userState);
        }
        
        private void OnRestoreResultsEx3OperationCompleted(object arg) {
            if ((this.RestoreResultsEx3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreResultsEx3Completed(this, new RestoreResultsEx3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/RestoreResultsExSP", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RestoreResultsExSP(string resultsQueryid, string inputSource, string outputSource, string entryIdResultColName, string folderResultColName, int timeout, ExSearchType searchtype) {
            object[] results = this.Invoke("RestoreResultsExSP", new object[] {
                        resultsQueryid,
                        inputSource,
                        outputSource,
                        entryIdResultColName,
                        folderResultColName,
                        timeout,
                        searchtype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RestoreResultsExSPAsync(string resultsQueryid, string inputSource, string outputSource, string entryIdResultColName, string folderResultColName, int timeout, ExSearchType searchtype) {
            this.RestoreResultsExSPAsync(resultsQueryid, inputSource, outputSource, entryIdResultColName, folderResultColName, timeout, searchtype, null);
        }
        
        /// <remarks/>
        public void RestoreResultsExSPAsync(string resultsQueryid, string inputSource, string outputSource, string entryIdResultColName, string folderResultColName, int timeout, ExSearchType searchtype, object userState) {
            if ((this.RestoreResultsExSPOperationCompleted == null)) {
                this.RestoreResultsExSPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreResultsExSPOperationCompleted);
            }
            this.InvokeAsync("RestoreResultsExSP", new object[] {
                        resultsQueryid,
                        inputSource,
                        outputSource,
                        entryIdResultColName,
                        folderResultColName,
                        timeout,
                        searchtype}, this.RestoreResultsExSPOperationCompleted, userState);
        }
        
        private void OnRestoreResultsExSPOperationCompleted(object arg) {
            if ((this.RestoreResultsExSPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreResultsExSPCompleted(this, new RestoreResultsExSPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/DeleteResults", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteResults(ExSearchType type, string resultsQueryid, string inputSourceXML) {
            object[] results = this.Invoke("DeleteResults", new object[] {
                        type,
                        resultsQueryid,
                        inputSourceXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteResultsAsync(ExSearchType type, string resultsQueryid, string inputSourceXML) {
            this.DeleteResultsAsync(type, resultsQueryid, inputSourceXML, null);
        }
        
        /// <remarks/>
        public void DeleteResultsAsync(ExSearchType type, string resultsQueryid, string inputSourceXML, object userState) {
            if ((this.DeleteResultsOperationCompleted == null)) {
                this.DeleteResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteResultsOperationCompleted);
            }
            this.InvokeAsync("DeleteResults", new object[] {
                        type,
                        resultsQueryid,
                        inputSourceXML}, this.DeleteResultsOperationCompleted, userState);
        }
        
        private void OnDeleteResultsOperationCompleted(object arg) {
            if ((this.DeleteResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteResultsCompleted(this, new DeleteResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/DeleteResultsEx", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteResultsEx(ExSearchType type, string resultsQueryid, string inputSourceXML, string entryIdResultColName, string folderResultColName, int timeout) {
            object[] results = this.Invoke("DeleteResultsEx", new object[] {
                        type,
                        resultsQueryid,
                        inputSourceXML,
                        entryIdResultColName,
                        folderResultColName,
                        timeout});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteResultsExAsync(ExSearchType type, string resultsQueryid, string inputSourceXML, string entryIdResultColName, string folderResultColName, int timeout) {
            this.DeleteResultsExAsync(type, resultsQueryid, inputSourceXML, entryIdResultColName, folderResultColName, timeout, null);
        }
        
        /// <remarks/>
        public void DeleteResultsExAsync(ExSearchType type, string resultsQueryid, string inputSourceXML, string entryIdResultColName, string folderResultColName, int timeout, object userState) {
            if ((this.DeleteResultsExOperationCompleted == null)) {
                this.DeleteResultsExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteResultsExOperationCompleted);
            }
            this.InvokeAsync("DeleteResultsEx", new object[] {
                        type,
                        resultsQueryid,
                        inputSourceXML,
                        entryIdResultColName,
                        folderResultColName,
                        timeout}, this.DeleteResultsExOperationCompleted, userState);
        }
        
        private void OnDeleteResultsExOperationCompleted(object arg) {
            if ((this.DeleteResultsExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteResultsExCompleted(this, new DeleteResultsExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/DeleteResultsEx2", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteResultsEx2(ExSearchType type, string resultsQueryid, string inputSourceXML, string entryIdResultColName, string folderResultColName, string summaryResultColumnName, string dateResultColumnName, string platformTypeColumnName, int timeout) {
            object[] results = this.Invoke("DeleteResultsEx2", new object[] {
                        type,
                        resultsQueryid,
                        inputSourceXML,
                        entryIdResultColName,
                        folderResultColName,
                        summaryResultColumnName,
                        dateResultColumnName,
                        platformTypeColumnName,
                        timeout});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteResultsEx2Async(ExSearchType type, string resultsQueryid, string inputSourceXML, string entryIdResultColName, string folderResultColName, string summaryResultColumnName, string dateResultColumnName, string platformTypeColumnName, int timeout) {
            this.DeleteResultsEx2Async(type, resultsQueryid, inputSourceXML, entryIdResultColName, folderResultColName, summaryResultColumnName, dateResultColumnName, platformTypeColumnName, timeout, null);
        }
        
        /// <remarks/>
        public void DeleteResultsEx2Async(ExSearchType type, string resultsQueryid, string inputSourceXML, string entryIdResultColName, string folderResultColName, string summaryResultColumnName, string dateResultColumnName, string platformTypeColumnName, int timeout, object userState) {
            if ((this.DeleteResultsEx2OperationCompleted == null)) {
                this.DeleteResultsEx2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteResultsEx2OperationCompleted);
            }
            this.InvokeAsync("DeleteResultsEx2", new object[] {
                        type,
                        resultsQueryid,
                        inputSourceXML,
                        entryIdResultColName,
                        folderResultColName,
                        summaryResultColumnName,
                        dateResultColumnName,
                        platformTypeColumnName,
                        timeout}, this.DeleteResultsEx2OperationCompleted, userState);
        }
        
        private void OnDeleteResultsEx2OperationCompleted(object arg) {
            if ((this.DeleteResultsEx2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteResultsEx2Completed(this, new DeleteResultsEx2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/DeleteResultsEx3", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteResultsEx3(ExSearchType type, string resultsQueryid, string inputSourceXML, string entryIdResultColName, string folderResultColName, string summaryResultColumnName, string dateResultColumnName, string platformTypeColumnName, string typeColumnName, string sizeColumnName, string senderColumnName, int timeout) {
            object[] results = this.Invoke("DeleteResultsEx3", new object[] {
                        type,
                        resultsQueryid,
                        inputSourceXML,
                        entryIdResultColName,
                        folderResultColName,
                        summaryResultColumnName,
                        dateResultColumnName,
                        platformTypeColumnName,
                        typeColumnName,
                        sizeColumnName,
                        senderColumnName,
                        timeout});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteResultsEx3Async(ExSearchType type, string resultsQueryid, string inputSourceXML, string entryIdResultColName, string folderResultColName, string summaryResultColumnName, string dateResultColumnName, string platformTypeColumnName, string typeColumnName, string sizeColumnName, string senderColumnName, int timeout) {
            this.DeleteResultsEx3Async(type, resultsQueryid, inputSourceXML, entryIdResultColName, folderResultColName, summaryResultColumnName, dateResultColumnName, platformTypeColumnName, typeColumnName, sizeColumnName, senderColumnName, timeout, null);
        }
        
        /// <remarks/>
        public void DeleteResultsEx3Async(ExSearchType type, string resultsQueryid, string inputSourceXML, string entryIdResultColName, string folderResultColName, string summaryResultColumnName, string dateResultColumnName, string platformTypeColumnName, string typeColumnName, string sizeColumnName, string senderColumnName, int timeout, object userState) {
            if ((this.DeleteResultsEx3OperationCompleted == null)) {
                this.DeleteResultsEx3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteResultsEx3OperationCompleted);
            }
            this.InvokeAsync("DeleteResultsEx3", new object[] {
                        type,
                        resultsQueryid,
                        inputSourceXML,
                        entryIdResultColName,
                        folderResultColName,
                        summaryResultColumnName,
                        dateResultColumnName,
                        platformTypeColumnName,
                        typeColumnName,
                        sizeColumnName,
                        senderColumnName,
                        timeout}, this.DeleteResultsEx3OperationCompleted, userState);
        }
        
        private void OnDeleteResultsEx3OperationCompleted(object arg) {
            if ((this.DeleteResultsEx3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteResultsEx3Completed(this, new DeleteResultsEx3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/ExportResults", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportResults(string resultsQueryid, string inputSource, string outputSource) {
            object[] results = this.Invoke("ExportResults", new object[] {
                        resultsQueryid,
                        inputSource,
                        outputSource});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportResultsAsync(string resultsQueryid, string inputSource, string outputSource) {
            this.ExportResultsAsync(resultsQueryid, inputSource, outputSource, null);
        }
        
        /// <remarks/>
        public void ExportResultsAsync(string resultsQueryid, string inputSource, string outputSource, object userState) {
            if ((this.ExportResultsOperationCompleted == null)) {
                this.ExportResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportResultsOperationCompleted);
            }
            this.InvokeAsync("ExportResults", new object[] {
                        resultsQueryid,
                        inputSource,
                        outputSource}, this.ExportResultsOperationCompleted, userState);
        }
        
        private void OnExportResultsOperationCompleted(object arg) {
            if ((this.ExportResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportResultsCompleted(this, new ExportResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/ExportResultsEx", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExportResultsEx(string resultsQueryid, string inputSource, string outputSource, string entryIdResultColName, string folderResultColName, int timeout) {
            object[] results = this.Invoke("ExportResultsEx", new object[] {
                        resultsQueryid,
                        inputSource,
                        outputSource,
                        entryIdResultColName,
                        folderResultColName,
                        timeout});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExportResultsExAsync(string resultsQueryid, string inputSource, string outputSource, string entryIdResultColName, string folderResultColName, int timeout) {
            this.ExportResultsExAsync(resultsQueryid, inputSource, outputSource, entryIdResultColName, folderResultColName, timeout, null);
        }
        
        /// <remarks/>
        public void ExportResultsExAsync(string resultsQueryid, string inputSource, string outputSource, string entryIdResultColName, string folderResultColName, int timeout, object userState) {
            if ((this.ExportResultsExOperationCompleted == null)) {
                this.ExportResultsExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportResultsExOperationCompleted);
            }
            this.InvokeAsync("ExportResultsEx", new object[] {
                        resultsQueryid,
                        inputSource,
                        outputSource,
                        entryIdResultColName,
                        folderResultColName,
                        timeout}, this.ExportResultsExOperationCompleted, userState);
        }
        
        private void OnExportResultsExOperationCompleted(object arg) {
            if ((this.ExportResultsExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportResultsExCompleted(this, new ExportResultsExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/GetStatusDetails", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetStatusDetails(string id, ExTaskStatusVerbosity verbosityLevel) {
            object[] results = this.Invoke("GetStatusDetails", new object[] {
                        id,
                        verbosityLevel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatusDetailsAsync(string id, ExTaskStatusVerbosity verbosityLevel) {
            this.GetStatusDetailsAsync(id, verbosityLevel, null);
        }
        
        /// <remarks/>
        public void GetStatusDetailsAsync(string id, ExTaskStatusVerbosity verbosityLevel, object userState) {
            if ((this.GetStatusDetailsOperationCompleted == null)) {
                this.GetStatusDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusDetailsOperationCompleted);
            }
            this.InvokeAsync("GetStatusDetails", new object[] {
                        id,
                        verbosityLevel}, this.GetStatusDetailsOperationCompleted, userState);
        }
        
        private void OnGetStatusDetailsOperationCompleted(object arg) {
            if ((this.GetStatusDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusDetailsCompleted(this, new GetStatusDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/ReleaseResults", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReleaseResults(string queryid) {
            this.Invoke("ReleaseResults", new object[] {
                        queryid});
        }
        
        /// <remarks/>
        public void ReleaseResultsAsync(string queryid) {
            this.ReleaseResultsAsync(queryid, null);
        }
        
        /// <remarks/>
        public void ReleaseResultsAsync(string queryid, object userState) {
            if ((this.ReleaseResultsOperationCompleted == null)) {
                this.ReleaseResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseResultsOperationCompleted);
            }
            this.InvokeAsync("ReleaseResults", new object[] {
                        queryid}, this.ReleaseResultsOperationCompleted, userState);
        }
        
        private void OnReleaseResultsOperationCompleted(object arg) {
            if ((this.ReleaseResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseResultsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/GetStatus", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExTaskStatus GetStatus(string id) {
            object[] results = this.Invoke("GetStatus", new object[] {
                        id});
            return ((ExTaskStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatusAsync(string id) {
            this.GetStatusAsync(id, null);
        }
        
        /// <remarks/>
        public void GetStatusAsync(string id, object userState) {
            if ((this.GetStatusOperationCompleted == null)) {
                this.GetStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusOperationCompleted);
            }
            this.InvokeAsync("GetStatus", new object[] {
                        id}, this.GetStatusOperationCompleted, userState);
        }
        
        private void OnGetStatusOperationCompleted(object arg) {
            if ((this.GetStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusCompleted(this, new GetStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/GetQueryStatus", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExTaskStatus GetQueryStatus(string queryid) {
            object[] results = this.Invoke("GetQueryStatus", new object[] {
                        queryid});
            return ((ExTaskStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetQueryStatusAsync(string queryid) {
            this.GetQueryStatusAsync(queryid, null);
        }
        
        /// <remarks/>
        public void GetQueryStatusAsync(string queryid, object userState) {
            if ((this.GetQueryStatusOperationCompleted == null)) {
                this.GetQueryStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQueryStatusOperationCompleted);
            }
            this.InvokeAsync("GetQueryStatus", new object[] {
                        queryid}, this.GetQueryStatusOperationCompleted, userState);
        }
        
        private void OnGetQueryStatusOperationCompleted(object arg) {
            if ((this.GetQueryStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQueryStatusCompleted(this, new GetQueryStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/EnumerateQueries", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet EnumerateQueries() {
            object[] results = this.Invoke("EnumerateQueries", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void EnumerateQueriesAsync() {
            this.EnumerateQueriesAsync(null);
        }
        
        /// <remarks/>
        public void EnumerateQueriesAsync(object userState) {
            if ((this.EnumerateQueriesOperationCompleted == null)) {
                this.EnumerateQueriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumerateQueriesOperationCompleted);
            }
            this.InvokeAsync("EnumerateQueries", new object[0], this.EnumerateQueriesOperationCompleted, userState);
        }
        
        private void OnEnumerateQueriesOperationCompleted(object arg) {
            if ((this.EnumerateQueriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumerateQueriesCompleted(this, new EnumerateQueriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/GetUserSettings", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserSettings() {
            object[] results = this.Invoke("GetUserSettings", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserSettingsAsync() {
            this.GetUserSettingsAsync(null);
        }
        
        /// <remarks/>
        public void GetUserSettingsAsync(object userState) {
            if ((this.GetUserSettingsOperationCompleted == null)) {
                this.GetUserSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserSettingsOperationCompleted);
            }
            this.InvokeAsync("GetUserSettings", new object[0], this.GetUserSettingsOperationCompleted, userState);
        }
        
        private void OnGetUserSettingsOperationCompleted(object arg) {
            if ((this.GetUserSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserSettingsCompleted(this, new GetUserSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/SaveUserSettings", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveUserSettings(string xmlData) {
            object[] results = this.Invoke("SaveUserSettings", new object[] {
                        xmlData});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveUserSettingsAsync(string xmlData) {
            this.SaveUserSettingsAsync(xmlData, null);
        }
        
        /// <remarks/>
        public void SaveUserSettingsAsync(string xmlData, object userState) {
            if ((this.SaveUserSettingsOperationCompleted == null)) {
                this.SaveUserSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUserSettingsOperationCompleted);
            }
            this.InvokeAsync("SaveUserSettings", new object[] {
                        xmlData}, this.SaveUserSettingsOperationCompleted, userState);
        }
        
        private void OnSaveUserSettingsOperationCompleted(object arg) {
            if ((this.SaveUserSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUserSettingsCompleted(this, new SaveUserSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/GetLastRunQuery", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLastRunQuery() {
            object[] results = this.Invoke("GetLastRunQuery", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastRunQueryAsync() {
            this.GetLastRunQueryAsync(null);
        }
        
        /// <remarks/>
        public void GetLastRunQueryAsync(object userState) {
            if ((this.GetLastRunQueryOperationCompleted == null)) {
                this.GetLastRunQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastRunQueryOperationCompleted);
            }
            this.InvokeAsync("GetLastRunQuery", new object[0], this.GetLastRunQueryOperationCompleted, userState);
        }
        
        private void OnGetLastRunQueryOperationCompleted(object arg) {
            if ((this.GetLastRunQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastRunQueryCompleted(this, new GetLastRunQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/SaveLastRunQuery", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveLastRunQuery(ExSearchType type, string xmlData) {
            object[] results = this.Invoke("SaveLastRunQuery", new object[] {
                        type,
                        xmlData});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveLastRunQueryAsync(ExSearchType type, string xmlData) {
            this.SaveLastRunQueryAsync(type, xmlData, null);
        }
        
        /// <remarks/>
        public void SaveLastRunQueryAsync(ExSearchType type, string xmlData, object userState) {
            if ((this.SaveLastRunQueryOperationCompleted == null)) {
                this.SaveLastRunQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveLastRunQueryOperationCompleted);
            }
            this.InvokeAsync("SaveLastRunQuery", new object[] {
                        type,
                        xmlData}, this.SaveLastRunQueryOperationCompleted, userState);
        }
        
        private void OnSaveLastRunQueryOperationCompleted(object arg) {
            if ((this.SaveLastRunQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveLastRunQueryCompleted(this, new SaveLastRunQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/AddQuery", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddQuery(string name, ExSearchType type, string query) {
            object[] results = this.Invoke("AddQuery", new object[] {
                        name,
                        type,
                        query});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddQueryAsync(string name, ExSearchType type, string query) {
            this.AddQueryAsync(name, type, query, null);
        }
        
        /// <remarks/>
        public void AddQueryAsync(string name, ExSearchType type, string query, object userState) {
            if ((this.AddQueryOperationCompleted == null)) {
                this.AddQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddQueryOperationCompleted);
            }
            this.InvokeAsync("AddQuery", new object[] {
                        name,
                        type,
                        query}, this.AddQueryOperationCompleted, userState);
        }
        
        private void OnAddQueryOperationCompleted(object arg) {
            if ((this.AddQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddQueryCompleted(this, new AddQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/ModifyQuery", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ModifyQuery(int queryid, string name, string query, ExSearchType type) {
            object[] results = this.Invoke("ModifyQuery", new object[] {
                        queryid,
                        name,
                        query,
                        type});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyQueryAsync(int queryid, string name, string query, ExSearchType type) {
            this.ModifyQueryAsync(queryid, name, query, type, null);
        }
        
        /// <remarks/>
        public void ModifyQueryAsync(int queryid, string name, string query, ExSearchType type, object userState) {
            if ((this.ModifyQueryOperationCompleted == null)) {
                this.ModifyQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyQueryOperationCompleted);
            }
            this.InvokeAsync("ModifyQuery", new object[] {
                        queryid,
                        name,
                        query,
                        type}, this.ModifyQueryOperationCompleted, userState);
        }
        
        private void OnModifyQueryOperationCompleted(object arg) {
            if ((this.ModifyQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyQueryCompleted(this, new ModifyQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/DeleteQuery", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteQuery(int queryid) {
            object[] results = this.Invoke("DeleteQuery", new object[] {
                        queryid});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteQueryAsync(int queryid) {
            this.DeleteQueryAsync(queryid, null);
        }
        
        /// <remarks/>
        public void DeleteQueryAsync(int queryid, object userState) {
            if ((this.DeleteQueryOperationCompleted == null)) {
                this.DeleteQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteQueryOperationCompleted);
            }
            this.InvokeAsync("DeleteQuery", new object[] {
                        queryid}, this.DeleteQueryOperationCompleted, userState);
        }
        
        private void OnDeleteQueryOperationCompleted(object arg) {
            if ((this.DeleteQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteQueryCompleted(this, new DeleteQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/EnumerateArchiveFolders", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EnumerateArchiveFolders(ExSearchType type) {
            object[] results = this.Invoke("EnumerateArchiveFolders", new object[] {
                        type});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EnumerateArchiveFoldersAsync(ExSearchType type) {
            this.EnumerateArchiveFoldersAsync(type, null);
        }
        
        /// <remarks/>
        public void EnumerateArchiveFoldersAsync(ExSearchType type, object userState) {
            if ((this.EnumerateArchiveFoldersOperationCompleted == null)) {
                this.EnumerateArchiveFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumerateArchiveFoldersOperationCompleted);
            }
            this.InvokeAsync("EnumerateArchiveFolders", new object[] {
                        type}, this.EnumerateArchiveFoldersOperationCompleted, userState);
        }
        
        private void OnEnumerateArchiveFoldersOperationCompleted(object arg) {
            if ((this.EnumerateArchiveFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumerateArchiveFoldersCompleted(this, new EnumerateArchiveFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/EnumerateArchiveFoldersAsDelegate", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EnumerateArchiveFoldersAsDelegate(ExSearchType type, string DN) {
            object[] results = this.Invoke("EnumerateArchiveFoldersAsDelegate", new object[] {
                        type,
                        DN});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EnumerateArchiveFoldersAsDelegateAsync(ExSearchType type, string DN) {
            this.EnumerateArchiveFoldersAsDelegateAsync(type, DN, null);
        }
        
        /// <remarks/>
        public void EnumerateArchiveFoldersAsDelegateAsync(ExSearchType type, string DN, object userState) {
            if ((this.EnumerateArchiveFoldersAsDelegateOperationCompleted == null)) {
                this.EnumerateArchiveFoldersAsDelegateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumerateArchiveFoldersAsDelegateOperationCompleted);
            }
            this.InvokeAsync("EnumerateArchiveFoldersAsDelegate", new object[] {
                        type,
                        DN}, this.EnumerateArchiveFoldersAsDelegateOperationCompleted, userState);
        }
        
        private void OnEnumerateArchiveFoldersAsDelegateOperationCompleted(object arg) {
            if ((this.EnumerateArchiveFoldersAsDelegateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumerateArchiveFoldersAsDelegateCompleted(this, new EnumerateArchiveFoldersAsDelegateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/EnumerateArchiveFolders2", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EnumerateArchiveFolders2(ExSearchType type, bool getIndexAttrs) {
            object[] results = this.Invoke("EnumerateArchiveFolders2", new object[] {
                        type,
                        getIndexAttrs});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EnumerateArchiveFolders2Async(ExSearchType type, bool getIndexAttrs) {
            this.EnumerateArchiveFolders2Async(type, getIndexAttrs, null);
        }
        
        /// <remarks/>
        public void EnumerateArchiveFolders2Async(ExSearchType type, bool getIndexAttrs, object userState) {
            if ((this.EnumerateArchiveFolders2OperationCompleted == null)) {
                this.EnumerateArchiveFolders2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumerateArchiveFolders2OperationCompleted);
            }
            this.InvokeAsync("EnumerateArchiveFolders2", new object[] {
                        type,
                        getIndexAttrs}, this.EnumerateArchiveFolders2OperationCompleted, userState);
        }
        
        private void OnEnumerateArchiveFolders2OperationCompleted(object arg) {
            if ((this.EnumerateArchiveFolders2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumerateArchiveFolders2Completed(this, new EnumerateArchiveFolders2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/EnumerateArchiveFoldersAsDelegate2", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EnumerateArchiveFoldersAsDelegate2(ExSearchType type, string DN, bool getIndexAttrs) {
            object[] results = this.Invoke("EnumerateArchiveFoldersAsDelegate2", new object[] {
                        type,
                        DN,
                        getIndexAttrs});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EnumerateArchiveFoldersAsDelegate2Async(ExSearchType type, string DN, bool getIndexAttrs) {
            this.EnumerateArchiveFoldersAsDelegate2Async(type, DN, getIndexAttrs, null);
        }
        
        /// <remarks/>
        public void EnumerateArchiveFoldersAsDelegate2Async(ExSearchType type, string DN, bool getIndexAttrs, object userState) {
            if ((this.EnumerateArchiveFoldersAsDelegate2OperationCompleted == null)) {
                this.EnumerateArchiveFoldersAsDelegate2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumerateArchiveFoldersAsDelegate2OperationCompleted);
            }
            this.InvokeAsync("EnumerateArchiveFoldersAsDelegate2", new object[] {
                        type,
                        DN,
                        getIndexAttrs}, this.EnumerateArchiveFoldersAsDelegate2OperationCompleted, userState);
        }
        
        private void OnEnumerateArchiveFoldersAsDelegate2OperationCompleted(object arg) {
            if ((this.EnumerateArchiveFoldersAsDelegate2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumerateArchiveFoldersAsDelegate2Completed(this, new EnumerateArchiveFoldersAsDelegate2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/EnumerateMailboxFolders", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EnumerateMailboxFolders(string dn, ExMailType type) {
            object[] results = this.Invoke("EnumerateMailboxFolders", new object[] {
                        dn,
                        type});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EnumerateMailboxFoldersAsync(string dn, ExMailType type) {
            this.EnumerateMailboxFoldersAsync(dn, type, null);
        }
        
        /// <remarks/>
        public void EnumerateMailboxFoldersAsync(string dn, ExMailType type, object userState) {
            if ((this.EnumerateMailboxFoldersOperationCompleted == null)) {
                this.EnumerateMailboxFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumerateMailboxFoldersOperationCompleted);
            }
            this.InvokeAsync("EnumerateMailboxFolders", new object[] {
                        dn,
                        type}, this.EnumerateMailboxFoldersOperationCompleted, userState);
        }
        
        private void OnEnumerateMailboxFoldersOperationCompleted(object arg) {
            if ((this.EnumerateMailboxFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumerateMailboxFoldersCompleted(this, new EnumerateMailboxFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/EnumerateMailboxSubFolders", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EnumerateMailboxSubFolders(string dn, ExMailType type, string rootPath, bool topLevelOnly) {
            object[] results = this.Invoke("EnumerateMailboxSubFolders", new object[] {
                        dn,
                        type,
                        rootPath,
                        topLevelOnly});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EnumerateMailboxSubFoldersAsync(string dn, ExMailType type, string rootPath, bool topLevelOnly) {
            this.EnumerateMailboxSubFoldersAsync(dn, type, rootPath, topLevelOnly, null);
        }
        
        /// <remarks/>
        public void EnumerateMailboxSubFoldersAsync(string dn, ExMailType type, string rootPath, bool topLevelOnly, object userState) {
            if ((this.EnumerateMailboxSubFoldersOperationCompleted == null)) {
                this.EnumerateMailboxSubFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumerateMailboxSubFoldersOperationCompleted);
            }
            this.InvokeAsync("EnumerateMailboxSubFolders", new object[] {
                        dn,
                        type,
                        rootPath,
                        topLevelOnly}, this.EnumerateMailboxSubFoldersOperationCompleted, userState);
        }
        
        private void OnEnumerateMailboxSubFoldersOperationCompleted(object arg) {
            if ((this.EnumerateMailboxSubFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumerateMailboxSubFoldersCompleted(this, new EnumerateMailboxSubFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/SearchNotesAddressBook", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SearchNotesAddressBook(string name, string email, string firstname, string lastname, string company, string office) {
            object[] results = this.Invoke("SearchNotesAddressBook", new object[] {
                        name,
                        email,
                        firstname,
                        lastname,
                        company,
                        office});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SearchNotesAddressBookAsync(string name, string email, string firstname, string lastname, string company, string office) {
            this.SearchNotesAddressBookAsync(name, email, firstname, lastname, company, office, null);
        }
        
        /// <remarks/>
        public void SearchNotesAddressBookAsync(string name, string email, string firstname, string lastname, string company, string office, object userState) {
            if ((this.SearchNotesAddressBookOperationCompleted == null)) {
                this.SearchNotesAddressBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchNotesAddressBookOperationCompleted);
            }
            this.InvokeAsync("SearchNotesAddressBook", new object[] {
                        name,
                        email,
                        firstname,
                        lastname,
                        company,
                        office}, this.SearchNotesAddressBookOperationCompleted, userState);
        }
        
        private void OnSearchNotesAddressBookOperationCompleted(object arg) {
            if ((this.SearchNotesAddressBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchNotesAddressBookCompleted(this, new SearchNotesAddressBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/EnumerateNotesAddressBooks", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode EnumerateNotesAddressBooks() {
            object[] results = this.Invoke("EnumerateNotesAddressBooks", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void EnumerateNotesAddressBooksAsync() {
            this.EnumerateNotesAddressBooksAsync(null);
        }
        
        /// <remarks/>
        public void EnumerateNotesAddressBooksAsync(object userState) {
            if ((this.EnumerateNotesAddressBooksOperationCompleted == null)) {
                this.EnumerateNotesAddressBooksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnumerateNotesAddressBooksOperationCompleted);
            }
            this.InvokeAsync("EnumerateNotesAddressBooks", new object[0], this.EnumerateNotesAddressBooksOperationCompleted, userState);
        }
        
        private void OnEnumerateNotesAddressBooksOperationCompleted(object arg) {
            if ((this.EnumerateNotesAddressBooksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnumerateNotesAddressBooksCompleted(this, new EnumerateNotesAddressBooksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/GetNotesAddressBookEntries", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetNotesAddressBookEntries(int abIndex, int startIndex, int maxEntries, string searchstr) {
            object[] results = this.Invoke("GetNotesAddressBookEntries", new object[] {
                        abIndex,
                        startIndex,
                        maxEntries,
                        searchstr});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetNotesAddressBookEntriesAsync(int abIndex, int startIndex, int maxEntries, string searchstr) {
            this.GetNotesAddressBookEntriesAsync(abIndex, startIndex, maxEntries, searchstr, null);
        }
        
        /// <remarks/>
        public void GetNotesAddressBookEntriesAsync(int abIndex, int startIndex, int maxEntries, string searchstr, object userState) {
            if ((this.GetNotesAddressBookEntriesOperationCompleted == null)) {
                this.GetNotesAddressBookEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNotesAddressBookEntriesOperationCompleted);
            }
            this.InvokeAsync("GetNotesAddressBookEntries", new object[] {
                        abIndex,
                        startIndex,
                        maxEntries,
                        searchstr}, this.GetNotesAddressBookEntriesOperationCompleted, userState);
        }
        
        private void OnGetNotesAddressBookEntriesOperationCompleted(object arg) {
            if ((this.GetNotesAddressBookEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNotesAddressBookEntriesCompleted(this, new GetNotesAddressBookEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/SearchExchangeAddressBook", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SearchExchangeAddressBook(string name, string email, string firstname, string lastname, string company, string office) {
            object[] results = this.Invoke("SearchExchangeAddressBook", new object[] {
                        name,
                        email,
                        firstname,
                        lastname,
                        company,
                        office});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SearchExchangeAddressBookAsync(string name, string email, string firstname, string lastname, string company, string office) {
            this.SearchExchangeAddressBookAsync(name, email, firstname, lastname, company, office, null);
        }
        
        /// <remarks/>
        public void SearchExchangeAddressBookAsync(string name, string email, string firstname, string lastname, string company, string office, object userState) {
            if ((this.SearchExchangeAddressBookOperationCompleted == null)) {
                this.SearchExchangeAddressBookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchExchangeAddressBookOperationCompleted);
            }
            this.InvokeAsync("SearchExchangeAddressBook", new object[] {
                        name,
                        email,
                        firstname,
                        lastname,
                        company,
                        office}, this.SearchExchangeAddressBookOperationCompleted, userState);
        }
        
        private void OnSearchExchangeAddressBookOperationCompleted(object arg) {
            if ((this.SearchExchangeAddressBookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchExchangeAddressBookCompleted(this, new SearchExchangeAddressBookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/ResolveEmailAddresses", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExSearchAddrEntry[] ResolveEmailAddresses(ExMailType type, ExSearchAddrEntry[] entryList) {
            object[] results = this.Invoke("ResolveEmailAddresses", new object[] {
                        type,
                        entryList});
            return ((ExSearchAddrEntry[])(results[0]));
        }
        
        /// <remarks/>
        public void ResolveEmailAddressesAsync(ExMailType type, ExSearchAddrEntry[] entryList) {
            this.ResolveEmailAddressesAsync(type, entryList, null);
        }
        
        /// <remarks/>
        public void ResolveEmailAddressesAsync(ExMailType type, ExSearchAddrEntry[] entryList, object userState) {
            if ((this.ResolveEmailAddressesOperationCompleted == null)) {
                this.ResolveEmailAddressesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResolveEmailAddressesOperationCompleted);
            }
            this.InvokeAsync("ResolveEmailAddresses", new object[] {
                        type,
                        entryList}, this.ResolveEmailAddressesOperationCompleted, userState);
        }
        
        private void OnResolveEmailAddressesOperationCompleted(object arg) {
            if ((this.ResolveEmailAddressesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResolveEmailAddressesCompleted(this, new ResolveEmailAddressesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/GetDefaultErrorCode", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExTaskErrorCode GetDefaultErrorCode() {
            object[] results = this.Invoke("GetDefaultErrorCode", new object[0]);
            return ((ExTaskErrorCode)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultErrorCodeAsync() {
            this.GetDefaultErrorCodeAsync(null);
        }
        
        /// <remarks/>
        public void GetDefaultErrorCodeAsync(object userState) {
            if ((this.GetDefaultErrorCodeOperationCompleted == null)) {
                this.GetDefaultErrorCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultErrorCodeOperationCompleted);
            }
            this.InvokeAsync("GetDefaultErrorCode", new object[0], this.GetDefaultErrorCodeOperationCompleted, userState);
        }
        
        private void OnGetDefaultErrorCodeOperationCompleted(object arg) {
            if ((this.GetDefaultErrorCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultErrorCodeCompleted(this, new GetDefaultErrorCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/GetServerConfiguration", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetServerConfiguration() {
            object[] results = this.Invoke("GetServerConfiguration", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerConfigurationAsync() {
            this.GetServerConfigurationAsync(null);
        }
        
        /// <remarks/>
        public void GetServerConfigurationAsync(object userState) {
            if ((this.GetServerConfigurationOperationCompleted == null)) {
                this.GetServerConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerConfigurationOperationCompleted);
            }
            this.InvokeAsync("GetServerConfiguration", new object[0], this.GetServerConfigurationOperationCompleted, userState);
        }
        
        private void OnGetServerConfigurationOperationCompleted(object arg) {
            if ((this.GetServerConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerConfigurationCompleted(this, new GetServerConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/SetExpireTime", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetExpireTime(string queryid, System.DateTime expireTime) {
            this.Invoke("SetExpireTime", new object[] {
                        queryid,
                        expireTime});
        }
        
        /// <remarks/>
        public void SetExpireTimeAsync(string queryid, System.DateTime expireTime) {
            this.SetExpireTimeAsync(queryid, expireTime, null);
        }
        
        /// <remarks/>
        public void SetExpireTimeAsync(string queryid, System.DateTime expireTime, object userState) {
            if ((this.SetExpireTimeOperationCompleted == null)) {
                this.SetExpireTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetExpireTimeOperationCompleted);
            }
            this.InvokeAsync("SetExpireTime", new object[] {
                        queryid,
                        expireTime}, this.SetExpireTimeOperationCompleted, userState);
        }
        
        private void OnSetExpireTimeOperationCompleted(object arg) {
            if ((this.SetExpireTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetExpireTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/GetXmlFile", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetXmlFile(ExXmlFile fileType) {
            object[] results = this.Invoke("GetXmlFile", new object[] {
                        fileType});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetXmlFileAsync(ExXmlFile fileType) {
            this.GetXmlFileAsync(fileType, null);
        }
        
        /// <remarks/>
        public void GetXmlFileAsync(ExXmlFile fileType, object userState) {
            if ((this.GetXmlFileOperationCompleted == null)) {
                this.GetXmlFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetXmlFileOperationCompleted);
            }
            this.InvokeAsync("GetXmlFile", new object[] {
                        fileType}, this.GetXmlFileOperationCompleted, userState);
        }
        
        private void OnGetXmlFileOperationCompleted(object arg) {
            if ((this.GetXmlFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetXmlFileCompleted(this, new GetXmlFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/GetUserInfo", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetUserInfo(string dn) {
            object[] results = this.Invoke("GetUserInfo", new object[] {
                        dn});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string dn) {
            this.GetUserInfoAsync(dn, null);
        }
        
        /// <remarks/>
        public void GetUserInfoAsync(string dn, object userState) {
            if ((this.GetUserInfoOperationCompleted == null)) {
                this.GetUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserInfo", new object[] {
                        dn}, this.GetUserInfoOperationCompleted, userState);
        }
        
        private void OnGetUserInfoOperationCompleted(object arg) {
            if ((this.GetUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://EMC.com/ExSearchWebService/GetArchivedFolderHierarchy", RequestNamespace="http://EMC.com/ExSearchWebService", ResponseNamespace="http://EMC.com/ExSearchWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetArchivedFolderHierarchy(string folderXML) {
            object[] results = this.Invoke("GetArchivedFolderHierarchy", new object[] {
                        folderXML});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetArchivedFolderHierarchyAsync(string folderXML) {
            this.GetArchivedFolderHierarchyAsync(folderXML, null);
        }
        
        /// <remarks/>
        public void GetArchivedFolderHierarchyAsync(string folderXML, object userState) {
            if ((this.GetArchivedFolderHierarchyOperationCompleted == null)) {
                this.GetArchivedFolderHierarchyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArchivedFolderHierarchyOperationCompleted);
            }
            this.InvokeAsync("GetArchivedFolderHierarchy", new object[] {
                        folderXML}, this.GetArchivedFolderHierarchyOperationCompleted, userState);
        }
        
        private void OnGetArchivedFolderHierarchyOperationCompleted(object arg) {
            if ((this.GetArchivedFolderHierarchyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArchivedFolderHierarchyCompleted(this, new GetArchivedFolderHierarchyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://EMC.com/ExSearchWebService")]
    public enum ExSearchType {
        
        /// <remarks/>
        Administrator,
        
        /// <remarks/>
        Owner,
        
        /// <remarks/>
        ReadAll,
        
        /// <remarks/>
        Contributor,
        
        /// <remarks/>
        ACL,
        
        /// <remarks/>
        UserDelete,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://EMC.com/ExSearchWebService")]
    public enum ExTaskType {
        
        /// <remarks/>
        exUnknown,
        
        /// <remarks/>
        exQueryJob,
        
        /// <remarks/>
        exRestoreJob,
        
        /// <remarks/>
        exDeleteFromArchiveJob,
        
        /// <remarks/>
        exDiscoQueryJob,
        
        /// <remarks/>
        exRestoreFilesJob,
        
        /// <remarks/>
        exSharePointRestoreJob,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://EMC.com/ExSearchWebService")]
    public enum ExTaskStatusVerbosity {
        
        /// <remarks/>
        EX_TASK_STATUS_ALL,
        
        /// <remarks/>
        EX_TASK_STATUS_ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://EMC.com/ExSearchWebService")]
    public enum ExTaskStatus {
        
        /// <remarks/>
        unknown,
        
        /// <remarks/>
        stopped,
        
        /// <remarks/>
        suspended,
        
        /// <remarks/>
        resuming,
        
        /// <remarks/>
        waiting,
        
        /// <remarks/>
        running,
        
        /// <remarks/>
        complete,
        
        /// <remarks/>
        failed,
        
        /// <remarks/>
        disposed,
        
        /// <remarks/>
        expired,
        
        /// <remarks/>
        terminated,
        
        /// <remarks/>
        incomplete,
        
        /// <remarks/>
        userterminated,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://EMC.com/ExSearchWebService")]
    public enum ExMailType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Notes,
        
        /// <remarks/>
        Exchange,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://EMC.com/ExSearchWebService")]
    public partial class ExSearchAddrEntry {
        
        private int indexField;
        
        private string dnField;
        
        private string typeField;
        
        private string cnField;
        
        private string displaynameField;
        
        private string telephonenumberField;
        
        private string locationField;
        
        private string companynameField;
        
        private string addressbookField;
        
        private string documentidField;
        
        private string[] addressListField;
        
        /// <remarks/>
        public int index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        public string dn {
            get {
                return this.dnField;
            }
            set {
                this.dnField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string cn {
            get {
                return this.cnField;
            }
            set {
                this.cnField = value;
            }
        }
        
        /// <remarks/>
        public string displayname {
            get {
                return this.displaynameField;
            }
            set {
                this.displaynameField = value;
            }
        }
        
        /// <remarks/>
        public string telephonenumber {
            get {
                return this.telephonenumberField;
            }
            set {
                this.telephonenumberField = value;
            }
        }
        
        /// <remarks/>
        public string location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public string companyname {
            get {
                return this.companynameField;
            }
            set {
                this.companynameField = value;
            }
        }
        
        /// <remarks/>
        public string addressbook {
            get {
                return this.addressbookField;
            }
            set {
                this.addressbookField = value;
            }
        }
        
        /// <remarks/>
        public string documentid {
            get {
                return this.documentidField;
            }
            set {
                this.documentidField = value;
            }
        }
        
        /// <remarks/>
        public string[] addressList {
            get {
                return this.addressListField;
            }
            set {
                this.addressListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://EMC.com/ExSearchWebService")]
    public enum ExTaskErrorCode {
        
        /// <remarks/>
        EX_TASK_ERROR_NONE,
        
        /// <remarks/>
        EX_TASK_ERROR_PERMISSIONS,
        
        /// <remarks/>
        EX_TASK_ERROR_BADXML,
        
        /// <remarks/>
        EX_TASK_ERROR_START,
        
        /// <remarks/>
        EX_TASK_ERROR_INDEX_UNAVAIL,
        
        /// <remarks/>
        EX_TASK_ERROR_UNKNOWN,
        
        /// <remarks/>
        EX_TASK_ERROR_RETRIEVE,
        
        /// <remarks/>
        EX_TASK_ERROR_STORE,
        
        /// <remarks/>
        EX_TASK_ERROR_DELETE,
        
        /// <remarks/>
        EX_TASK_ERROR_QUERY2BIG,
        
        /// <remarks/>
        EX_TASK_ERROR_INDEX_CORRUPT,
        
        /// <remarks/>
        EX_TASK_ERROR_INDEX_OPEN,
        
        /// <remarks/>
        EX_TASK_ERROR_INDEX_CLOSE,
        
        /// <remarks/>
        EX_TASK_ERROR_INDEXER,
        
        /// <remarks/>
        EX_TASK_ERROR_ANCDB_CORRUPT,
        
        /// <remarks/>
        EX_TASK_ERROR_SQL_UNKNOWN,
        
        /// <remarks/>
        EX_TASK_ERROR_QUERY_INVALID,
        
        /// <remarks/>
        EX_TASK_ERROR_NO_SHARED_MEMORY,
        
        /// <remarks/>
        EX_TASK_ERROR_SPAWN_FAILED,
        
        /// <remarks/>
        EX_TASK_ERROR_FTI_UNKNOWN,
        
        /// <remarks/>
        EX_TASK_ERROR_DISPOSED_RESULTS,
        
        /// <remarks/>
        EX_TASK_ERROR_SEARCH_PENDING,
        
        /// <remarks/>
        EX_TASK_ERROR_MISSING_ITEMS,
        
        /// <remarks/>
        EX_TASK_ERROR_ANCDB_OPEN,
        
        /// <remarks/>
        EX_TASK_ERROR_OUT_OF_DATE_RANGE,
        
        /// <remarks/>
        EX_TASK_ERROR_SHARING_VIOLATION,
        
        /// <remarks/>
        EX_TASK_ERROR_EXPORT_JBC_UNRECOVERABLE,
        
        /// <remarks/>
        EX_TASK_ERROR_MAX_DOMAIN_ADDRESS,
        
        /// <remarks/>
        EX_TASK_WARNING,
        
        /// <remarks/>
        EX_TASK_ERROR_UNPERFORMED_TRANSACTION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://EMC.com/ExSearchWebService")]
    public enum ExXmlFile {
        
        /// <remarks/>
        NormalizedPropertyMapXml,
        
        /// <remarks/>
        PresentationXml,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AuthenticateUserCompletedEventHandler(object sender, AuthenticateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserDistinguishedNameCompletedEventHandler(object sender, GetUserDistinguishedNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserDistinguishedNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserDistinguishedNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HasDelegateAccessCompletedEventHandler(object sender, HasDelegateAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasDelegateAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasDelegateAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchCompletedEventHandler(object sender, SearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchExCompletedEventHandler(object sender, SearchExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchAsDelegateCompletedEventHandler(object sender, SearchAsDelegateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchAsDelegateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchAsDelegateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchAsDelegateExCompletedEventHandler(object sender, SearchAsDelegateExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchAsDelegateExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchAsDelegateExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StopSearchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNumResultsCompletedEventHandler(object sender, GetNumResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNumResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNumResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPagedResultsCompletedEventHandler(object sender, GetPagedResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPagedResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPagedResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectResultsCompletedEventHandler(object sender, SelectResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UnselectResultsCompletedEventHandler(object sender, UnselectResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnselectResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnselectResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SelectAllResultsCompletedEventHandler(object sender, SelectAllResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectAllResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectAllResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UnselectAllResultsCompletedEventHandler(object sender, UnselectAllResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnselectAllResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnselectAllResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNumSelectedCompletedEventHandler(object sender, GetNumSelectedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNumSelectedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNumSelectedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNumSelectedFilesCompletedEventHandler(object sender, GetNumSelectedFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNumSelectedFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNumSelectedFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPlatformTypesOfSelectedItemsCompletedEventHandler(object sender, GetPlatformTypesOfSelectedItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlatformTypesOfSelectedItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlatformTypesOfSelectedItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFoldersofSelectedFilesCompletedEventHandler(object sender, GetFoldersofSelectedFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFoldersofSelectedFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFoldersofSelectedFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsVirtualFolderCompletedEventHandler(object sender, IsVirtualFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsVirtualFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsVirtualFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsOrganizationCompletedEventHandler(object sender, IsOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RestoreResultsCompletedEventHandler(object sender, RestoreResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestoreResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RestoreResultsExCompletedEventHandler(object sender, RestoreResultsExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreResultsExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestoreResultsExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RestoreResults2CompletedEventHandler(object sender, RestoreResults2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreResults2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestoreResults2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RestoreResultsEx2CompletedEventHandler(object sender, RestoreResultsEx2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreResultsEx2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestoreResultsEx2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RestoreResultsEx3CompletedEventHandler(object sender, RestoreResultsEx3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreResultsEx3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestoreResultsEx3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RestoreResultsExSPCompletedEventHandler(object sender, RestoreResultsExSPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreResultsExSPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestoreResultsExSPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteResultsCompletedEventHandler(object sender, DeleteResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteResultsExCompletedEventHandler(object sender, DeleteResultsExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteResultsExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteResultsExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteResultsEx2CompletedEventHandler(object sender, DeleteResultsEx2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteResultsEx2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteResultsEx2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteResultsEx3CompletedEventHandler(object sender, DeleteResultsEx3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteResultsEx3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteResultsEx3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExportResultsCompletedEventHandler(object sender, ExportResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ExportResultsExCompletedEventHandler(object sender, ExportResultsExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportResultsExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportResultsExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetStatusDetailsCompletedEventHandler(object sender, GetStatusDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatusDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReleaseResultsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetStatusCompletedEventHandler(object sender, GetStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExTaskStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExTaskStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetQueryStatusCompletedEventHandler(object sender, GetQueryStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQueryStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQueryStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExTaskStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExTaskStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EnumerateQueriesCompletedEventHandler(object sender, EnumerateQueriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumerateQueriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumerateQueriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserSettingsCompletedEventHandler(object sender, GetUserSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveUserSettingsCompletedEventHandler(object sender, SaveUserSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveUserSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveUserSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLastRunQueryCompletedEventHandler(object sender, GetLastRunQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastRunQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastRunQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveLastRunQueryCompletedEventHandler(object sender, SaveLastRunQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveLastRunQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveLastRunQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddQueryCompletedEventHandler(object sender, AddQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ModifyQueryCompletedEventHandler(object sender, ModifyQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteQueryCompletedEventHandler(object sender, DeleteQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EnumerateArchiveFoldersCompletedEventHandler(object sender, EnumerateArchiveFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumerateArchiveFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumerateArchiveFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EnumerateArchiveFoldersAsDelegateCompletedEventHandler(object sender, EnumerateArchiveFoldersAsDelegateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumerateArchiveFoldersAsDelegateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumerateArchiveFoldersAsDelegateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EnumerateArchiveFolders2CompletedEventHandler(object sender, EnumerateArchiveFolders2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumerateArchiveFolders2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumerateArchiveFolders2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EnumerateArchiveFoldersAsDelegate2CompletedEventHandler(object sender, EnumerateArchiveFoldersAsDelegate2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumerateArchiveFoldersAsDelegate2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumerateArchiveFoldersAsDelegate2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EnumerateMailboxFoldersCompletedEventHandler(object sender, EnumerateMailboxFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumerateMailboxFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumerateMailboxFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EnumerateMailboxSubFoldersCompletedEventHandler(object sender, EnumerateMailboxSubFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumerateMailboxSubFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumerateMailboxSubFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchNotesAddressBookCompletedEventHandler(object sender, SearchNotesAddressBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchNotesAddressBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchNotesAddressBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EnumerateNotesAddressBooksCompletedEventHandler(object sender, EnumerateNotesAddressBooksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnumerateNotesAddressBooksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnumerateNotesAddressBooksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetNotesAddressBookEntriesCompletedEventHandler(object sender, GetNotesAddressBookEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNotesAddressBookEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNotesAddressBookEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchExchangeAddressBookCompletedEventHandler(object sender, SearchExchangeAddressBookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchExchangeAddressBookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchExchangeAddressBookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ResolveEmailAddressesCompletedEventHandler(object sender, ResolveEmailAddressesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResolveEmailAddressesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResolveEmailAddressesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExSearchAddrEntry[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExSearchAddrEntry[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDefaultErrorCodeCompletedEventHandler(object sender, GetDefaultErrorCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultErrorCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultErrorCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExTaskErrorCode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExTaskErrorCode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetServerConfigurationCompletedEventHandler(object sender, GetServerConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetExpireTimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetXmlFileCompletedEventHandler(object sender, GetXmlFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetXmlFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetXmlFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserInfoCompletedEventHandler(object sender, GetUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetArchivedFolderHierarchyCompletedEventHandler(object sender, GetArchivedFolderHierarchyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArchivedFolderHierarchyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArchivedFolderHierarchyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591