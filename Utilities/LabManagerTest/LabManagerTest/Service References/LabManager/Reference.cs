//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LabManagerTest.LabManager {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Name="LabManager SOAP interfaceSoap", Namespace="http://vmware.com/labmanager", ConfigurationName="LabManager.LabManagerSOAPinterfaceSoap")]
    public interface LabManagerSOAPinterfaceSoap {
        
        // CODEGEN: Generating message contract since message SetCurrentOrganizationByNameRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/SetCurrentOrganizationByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.SetCurrentOrganizationByNameResponse SetCurrentOrganizationByName(LabManagerTest.LabManager.SetCurrentOrganizationByNameRequest request);
        
        // CODEGEN: Generating message contract since message SetCurrentWorkspaceByNameRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/SetCurrentWorkspaceByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.SetCurrentWorkspaceByNameResponse SetCurrentWorkspaceByName(LabManagerTest.LabManager.SetCurrentWorkspaceByNameRequest request);
        
        // CODEGEN: Generating message contract since message GetCurrentOrganizationNameRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/GetCurrentOrganizationName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.GetCurrentOrganizationNameResponse GetCurrentOrganizationName(LabManagerTest.LabManager.GetCurrentOrganizationNameRequest request);
        
        // CODEGEN: Generating message contract since message GetCurrentWorkspaceNameRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/GetCurrentWorkspaceName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.GetCurrentWorkspaceNameResponse GetCurrentWorkspaceName(LabManagerTest.LabManager.GetCurrentWorkspaceNameRequest request);
        
        // CODEGEN: Generating message contract since message GetConfigurationRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/GetConfiguration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.GetConfigurationResponse GetConfiguration(LabManagerTest.LabManager.GetConfigurationRequest request);
        
        // CODEGEN: Generating message contract since message GetConfigurationByNameRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/GetConfigurationByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.GetConfigurationByNameResponse GetConfigurationByName(LabManagerTest.LabManager.GetConfigurationByNameRequest request);
        
        // CODEGEN: Generating message contract since message GetSingleConfigurationByNameRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/GetSingleConfigurationByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.GetSingleConfigurationByNameResponse GetSingleConfigurationByName(LabManagerTest.LabManager.GetSingleConfigurationByNameRequest request);
        
        // CODEGEN: Generating message contract since message ListConfigurationsRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/ListConfigurations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.ListConfigurationsResponse ListConfigurations(LabManagerTest.LabManager.ListConfigurationsRequest request);
        
        // CODEGEN: Generating message contract since message ConfigurationPerformActionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/ConfigurationPerformAction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.ConfigurationPerformActionResponse ConfigurationPerformAction(LabManagerTest.LabManager.ConfigurationPerformActionRequest request);
        
        // CODEGEN: Generating message contract since message ConfigurationDeployRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/ConfigurationDeploy", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.ConfigurationDeployResponse ConfigurationDeploy(LabManagerTest.LabManager.ConfigurationDeployRequest request);
        
        // CODEGEN: Generating message contract since message ConfigurationUndeployRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/ConfigurationUndeploy", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.ConfigurationUndeployResponse ConfigurationUndeploy(LabManagerTest.LabManager.ConfigurationUndeployRequest request);
        
        // CODEGEN: Generating message contract since message ConfigurationCloneRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/ConfigurationClone", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.ConfigurationCloneResponse ConfigurationClone(LabManagerTest.LabManager.ConfigurationCloneRequest request);
        
        // CODEGEN: Generating message contract since message ConfigurationCaptureRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/ConfigurationCapture", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.ConfigurationCaptureResponse ConfigurationCapture(LabManagerTest.LabManager.ConfigurationCaptureRequest request);
        
        // CODEGEN: Generating message contract since message ConfigurationCheckoutRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/ConfigurationCheckout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.ConfigurationCheckoutResponse ConfigurationCheckout(LabManagerTest.LabManager.ConfigurationCheckoutRequest request);
        
        // CODEGEN: Generating message contract since message LiveLinkRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/LiveLink", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.LiveLinkResponse LiveLink(LabManagerTest.LabManager.LiveLinkRequest request);
        
        // CODEGEN: Generating message contract since message ConfigurationDeleteRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/ConfigurationDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.ConfigurationDeleteResponse ConfigurationDelete(LabManagerTest.LabManager.ConfigurationDeleteRequest request);
        
        // CODEGEN: Generating message contract since message ConfigurationSetPublicPrivateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/ConfigurationSetPublicPrivate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.ConfigurationSetPublicPrivateResponse ConfigurationSetPublicPrivate(LabManagerTest.LabManager.ConfigurationSetPublicPrivateRequest request);
        
        // CODEGEN: Generating message contract since message ListMachinesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/ListMachines", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.ListMachinesResponse ListMachines(LabManagerTest.LabManager.ListMachinesRequest request);
        
        // CODEGEN: Generating message contract since message GetMachineRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/GetMachine", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.GetMachineResponse GetMachine(LabManagerTest.LabManager.GetMachineRequest request);
        
        // CODEGEN: Generating message contract since message GetMachineByNameRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/GetMachineByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.GetMachineByNameResponse GetMachineByName(LabManagerTest.LabManager.GetMachineByNameRequest request);
        
        // CODEGEN: Generating message contract since message MachinePerformActionRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://vmware.com/labmanager/MachinePerformAction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LabManagerTest.LabManager.MachinePerformActionResponse MachinePerformAction(LabManagerTest.LabManager.MachinePerformActionRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vmware.com/labmanager")]
    public partial class AuthenticationHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string usernameField;
        
        private string passwordField;
        
        private string organizationnameField;
        
        private string workspacenameField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string organizationname {
            get {
                return this.organizationnameField;
            }
            set {
                this.organizationnameField = value;
                this.RaisePropertyChanged("organizationname");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string workspacename {
            get {
                return this.workspacenameField;
            }
            set {
                this.workspacenameField = value;
                this.RaisePropertyChanged("workspacename");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vmware.com/labmanager")]
    public partial class Machine : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string internalIPField;
        
        private string externalIPField;
        
        private string macAddressField;
        
        private int memoryField;
        
        private int statusField;
        
        private bool isDeployedField;
        
        private int configIDField;
        
        private string datastoreNameResidesOnField;
        
        private string hostNameDeployedOnField;
        
        private string ownerFullNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string internalIP {
            get {
                return this.internalIPField;
            }
            set {
                this.internalIPField = value;
                this.RaisePropertyChanged("internalIP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string externalIP {
            get {
                return this.externalIPField;
            }
            set {
                this.externalIPField = value;
                this.RaisePropertyChanged("externalIP");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string macAddress {
            get {
                return this.macAddressField;
            }
            set {
                this.macAddressField = value;
                this.RaisePropertyChanged("macAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int memory {
            get {
                return this.memoryField;
            }
            set {
                this.memoryField = value;
                this.RaisePropertyChanged("memory");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool isDeployed {
            get {
                return this.isDeployedField;
            }
            set {
                this.isDeployedField = value;
                this.RaisePropertyChanged("isDeployed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public int configID {
            get {
                return this.configIDField;
            }
            set {
                this.configIDField = value;
                this.RaisePropertyChanged("configID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string DatastoreNameResidesOn {
            get {
                return this.datastoreNameResidesOnField;
            }
            set {
                this.datastoreNameResidesOnField = value;
                this.RaisePropertyChanged("DatastoreNameResidesOn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string HostNameDeployedOn {
            get {
                return this.hostNameDeployedOnField;
            }
            set {
                this.hostNameDeployedOnField = value;
                this.RaisePropertyChanged("HostNameDeployedOn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string OwnerFullName {
            get {
                return this.ownerFullNameField;
            }
            set {
                this.ownerFullNameField = value;
                this.RaisePropertyChanged("OwnerFullName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vmware.com/labmanager")]
    public partial class Configuration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string nameField;
        
        private string descriptionField;
        
        private bool isPublicField;
        
        private bool isDeployedField;
        
        private int fenceModeField;
        
        private int typeField;
        
        private string ownerField;
        
        private System.DateTime dateCreatedField;
        
        private double autoDeleteInMilliSecondsField;
        
        private string bucketNameField;
        
        private SOAPMustBeFenced mustBeFencedField;
        
        private System.DateTime autoDeleteDateTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool isPublic {
            get {
                return this.isPublicField;
            }
            set {
                this.isPublicField = value;
                this.RaisePropertyChanged("isPublic");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool isDeployed {
            get {
                return this.isDeployedField;
            }
            set {
                this.isDeployedField = value;
                this.RaisePropertyChanged("isDeployed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int fenceMode {
            get {
                return this.fenceModeField;
            }
            set {
                this.fenceModeField = value;
                this.RaisePropertyChanged("fenceMode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
                this.RaisePropertyChanged("owner");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public System.DateTime dateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
                this.RaisePropertyChanged("dateCreated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public double autoDeleteInMilliSeconds {
            get {
                return this.autoDeleteInMilliSecondsField;
            }
            set {
                this.autoDeleteInMilliSecondsField = value;
                this.RaisePropertyChanged("autoDeleteInMilliSeconds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string bucketName {
            get {
                return this.bucketNameField;
            }
            set {
                this.bucketNameField = value;
                this.RaisePropertyChanged("bucketName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public SOAPMustBeFenced mustBeFenced {
            get {
                return this.mustBeFencedField;
            }
            set {
                this.mustBeFencedField = value;
                this.RaisePropertyChanged("mustBeFenced");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public System.DateTime autoDeleteDateTime {
            get {
                return this.autoDeleteDateTimeField;
            }
            set {
                this.autoDeleteDateTimeField = value;
                this.RaisePropertyChanged("autoDeleteDateTime");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://vmware.com/labmanager")]
    public enum SOAPMustBeFenced {
        
        /// <remarks/>
        NotSpecified,
        
        /// <remarks/>
        True,
        
        /// <remarks/>
        False,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCurrentOrganizationByName", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class SetCurrentOrganizationByNameRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public string orgName;
        
        public SetCurrentOrganizationByNameRequest() {
        }
        
        public SetCurrentOrganizationByNameRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, string orgName) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.orgName = orgName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCurrentOrganizationByNameResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class SetCurrentOrganizationByNameResponse {
        
        public SetCurrentOrganizationByNameResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCurrentWorkspaceByName", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class SetCurrentWorkspaceByNameRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public string orgName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=1)]
        public string workspaceName;
        
        public SetCurrentWorkspaceByNameRequest() {
        }
        
        public SetCurrentWorkspaceByNameRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, string orgName, string workspaceName) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.orgName = orgName;
            this.workspaceName = workspaceName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCurrentWorkspaceByNameResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class SetCurrentWorkspaceByNameResponse {
        
        public SetCurrentWorkspaceByNameResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrentOrganizationName", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class GetCurrentOrganizationNameRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        public GetCurrentOrganizationNameRequest() {
        }
        
        public GetCurrentOrganizationNameRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader) {
            this.AuthenticationHeader = AuthenticationHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrentOrganizationNameResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class GetCurrentOrganizationNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public string GetCurrentOrganizationNameResult;
        
        public GetCurrentOrganizationNameResponse() {
        }
        
        public GetCurrentOrganizationNameResponse(string GetCurrentOrganizationNameResult) {
            this.GetCurrentOrganizationNameResult = GetCurrentOrganizationNameResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrentWorkspaceName", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class GetCurrentWorkspaceNameRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        public GetCurrentWorkspaceNameRequest() {
        }
        
        public GetCurrentWorkspaceNameRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader) {
            this.AuthenticationHeader = AuthenticationHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrentWorkspaceNameResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class GetCurrentWorkspaceNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public string GetCurrentWorkspaceNameResult;
        
        public GetCurrentWorkspaceNameResponse() {
        }
        
        public GetCurrentWorkspaceNameResponse(string GetCurrentWorkspaceNameResult) {
            this.GetCurrentWorkspaceNameResult = GetCurrentWorkspaceNameResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetConfiguration", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class GetConfigurationRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public int id;
        
        public GetConfigurationRequest() {
        }
        
        public GetConfigurationRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int id) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetConfigurationResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class GetConfigurationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public LabManagerTest.LabManager.Configuration GetConfigurationResult;
        
        public GetConfigurationResponse() {
        }
        
        public GetConfigurationResponse(LabManagerTest.LabManager.Configuration GetConfigurationResult) {
            this.GetConfigurationResult = GetConfigurationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetConfigurationByName", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class GetConfigurationByNameRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public string name;
        
        public GetConfigurationByNameRequest() {
        }
        
        public GetConfigurationByNameRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, string name) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetConfigurationByNameResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class GetConfigurationByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public Configuration[] GetConfigurationByNameResult;
        
        public GetConfigurationByNameResponse() {
        }
        
        public GetConfigurationByNameResponse(Configuration[] GetConfigurationByNameResult) {
            this.GetConfigurationByNameResult = GetConfigurationByNameResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSingleConfigurationByName", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class GetSingleConfigurationByNameRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public string name;
        
        public GetSingleConfigurationByNameRequest() {
        }
        
        public GetSingleConfigurationByNameRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, string name) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSingleConfigurationByNameResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class GetSingleConfigurationByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public LabManagerTest.LabManager.Configuration GetSingleConfigurationByNameResult;
        
        public GetSingleConfigurationByNameResponse() {
        }
        
        public GetSingleConfigurationByNameResponse(LabManagerTest.LabManager.Configuration GetSingleConfigurationByNameResult) {
            this.GetSingleConfigurationByNameResult = GetSingleConfigurationByNameResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListConfigurations", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ListConfigurationsRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public int configurationType;
        
        public ListConfigurationsRequest() {
        }
        
        public ListConfigurationsRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationType) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.configurationType = configurationType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListConfigurationsResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ListConfigurationsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public Configuration[] ListConfigurationsResult;
        
        public ListConfigurationsResponse() {
        }
        
        public ListConfigurationsResponse(Configuration[] ListConfigurationsResult) {
            this.ListConfigurationsResult = ListConfigurationsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigurationPerformAction", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ConfigurationPerformActionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public int configurationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=1)]
        public int action;
        
        public ConfigurationPerformActionRequest() {
        }
        
        public ConfigurationPerformActionRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId, int action) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.configurationId = configurationId;
            this.action = action;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigurationPerformActionResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ConfigurationPerformActionResponse {
        
        public ConfigurationPerformActionResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigurationDeploy", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ConfigurationDeployRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public int configurationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=1)]
        public bool isCached;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=2)]
        public int fenceMode;
        
        public ConfigurationDeployRequest() {
        }
        
        public ConfigurationDeployRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId, bool isCached, int fenceMode) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.configurationId = configurationId;
            this.isCached = isCached;
            this.fenceMode = fenceMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigurationDeployResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ConfigurationDeployResponse {
        
        public ConfigurationDeployResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigurationUndeploy", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ConfigurationUndeployRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public int configurationId;
        
        public ConfigurationUndeployRequest() {
        }
        
        public ConfigurationUndeployRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.configurationId = configurationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigurationUndeployResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ConfigurationUndeployResponse {
        
        public ConfigurationUndeployResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigurationClone", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ConfigurationCloneRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public int configurationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=1)]
        public string newWorkspaceName;
        
        public ConfigurationCloneRequest() {
        }
        
        public ConfigurationCloneRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId, string newWorkspaceName) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.configurationId = configurationId;
            this.newWorkspaceName = newWorkspaceName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigurationCloneResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ConfigurationCloneResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public int ConfigurationCloneResult;
        
        public ConfigurationCloneResponse() {
        }
        
        public ConfigurationCloneResponse(int ConfigurationCloneResult) {
            this.ConfigurationCloneResult = ConfigurationCloneResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigurationCapture", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ConfigurationCaptureRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public int configurationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=1)]
        public string newLibraryName;
        
        public ConfigurationCaptureRequest() {
        }
        
        public ConfigurationCaptureRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId, string newLibraryName) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.configurationId = configurationId;
            this.newLibraryName = newLibraryName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigurationCaptureResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ConfigurationCaptureResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public int ConfigurationCaptureResult;
        
        public ConfigurationCaptureResponse() {
        }
        
        public ConfigurationCaptureResponse(int ConfigurationCaptureResult) {
            this.ConfigurationCaptureResult = ConfigurationCaptureResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigurationCheckout", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ConfigurationCheckoutRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public int configurationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=1)]
        public string workspaceName;
        
        public ConfigurationCheckoutRequest() {
        }
        
        public ConfigurationCheckoutRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId, string workspaceName) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.configurationId = configurationId;
            this.workspaceName = workspaceName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigurationCheckoutResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ConfigurationCheckoutResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public int ConfigurationCheckoutResult;
        
        public ConfigurationCheckoutResponse() {
        }
        
        public ConfigurationCheckoutResponse(int ConfigurationCheckoutResult) {
            this.ConfigurationCheckoutResult = ConfigurationCheckoutResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LiveLink", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class LiveLinkRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public string configName;
        
        public LiveLinkRequest() {
        }
        
        public LiveLinkRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, string configName) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.configName = configName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LiveLinkResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class LiveLinkResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public string LiveLinkResult;
        
        public LiveLinkResponse() {
        }
        
        public LiveLinkResponse(string LiveLinkResult) {
            this.LiveLinkResult = LiveLinkResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigurationDelete", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ConfigurationDeleteRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public int configurationId;
        
        public ConfigurationDeleteRequest() {
        }
        
        public ConfigurationDeleteRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.configurationId = configurationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigurationDeleteResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ConfigurationDeleteResponse {
        
        public ConfigurationDeleteResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigurationSetPublicPrivate", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ConfigurationSetPublicPrivateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public int configurationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=1)]
        public bool isPublic;
        
        public ConfigurationSetPublicPrivateRequest() {
        }
        
        public ConfigurationSetPublicPrivateRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId, bool isPublic) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.configurationId = configurationId;
            this.isPublic = isPublic;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfigurationSetPublicPrivateResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ConfigurationSetPublicPrivateResponse {
        
        public ConfigurationSetPublicPrivateResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListMachines", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ListMachinesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public int configurationId;
        
        public ListMachinesRequest() {
        }
        
        public ListMachinesRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.configurationId = configurationId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListMachinesResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class ListMachinesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public Machine[] ListMachinesResult;
        
        public ListMachinesResponse() {
        }
        
        public ListMachinesResponse(Machine[] ListMachinesResult) {
            this.ListMachinesResult = ListMachinesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMachine", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class GetMachineRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public int machineId;
        
        public GetMachineRequest() {
        }
        
        public GetMachineRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int machineId) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.machineId = machineId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMachineResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class GetMachineResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public LabManagerTest.LabManager.Machine GetMachineResult;
        
        public GetMachineResponse() {
        }
        
        public GetMachineResponse(LabManagerTest.LabManager.Machine GetMachineResult) {
            this.GetMachineResult = GetMachineResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMachineByName", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class GetMachineByNameRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public int configurationId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=1)]
        public string name;
        
        public GetMachineByNameRequest() {
        }
        
        public GetMachineByNameRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId, string name) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.configurationId = configurationId;
            this.name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMachineByNameResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class GetMachineByNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public LabManagerTest.LabManager.Machine GetMachineByNameResult;
        
        public GetMachineByNameResponse() {
        }
        
        public GetMachineByNameResponse(LabManagerTest.LabManager.Machine GetMachineByNameResult) {
            this.GetMachineByNameResult = GetMachineByNameResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MachinePerformAction", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class MachinePerformActionRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://vmware.com/labmanager")]
        public LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=0)]
        public int machineId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://vmware.com/labmanager", Order=1)]
        public int action;
        
        public MachinePerformActionRequest() {
        }
        
        public MachinePerformActionRequest(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int machineId, int action) {
            this.AuthenticationHeader = AuthenticationHeader;
            this.machineId = machineId;
            this.action = action;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MachinePerformActionResponse", WrapperNamespace="http://vmware.com/labmanager", IsWrapped=true)]
    public partial class MachinePerformActionResponse {
        
        public MachinePerformActionResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface LabManagerSOAPinterfaceSoapChannel : LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LabManagerSOAPinterfaceSoapClient : System.ServiceModel.ClientBase<LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap>, LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap {
        
        public LabManagerSOAPinterfaceSoapClient() {
        }
        
        public LabManagerSOAPinterfaceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LabManagerSOAPinterfaceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LabManagerSOAPinterfaceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LabManagerSOAPinterfaceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.SetCurrentOrganizationByNameResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.SetCurrentOrganizationByName(LabManagerTest.LabManager.SetCurrentOrganizationByNameRequest request) {
            return base.Channel.SetCurrentOrganizationByName(request);
        }
        
        public void SetCurrentOrganizationByName(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, string orgName) {
            LabManagerTest.LabManager.SetCurrentOrganizationByNameRequest inValue = new LabManagerTest.LabManager.SetCurrentOrganizationByNameRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.orgName = orgName;
            LabManagerTest.LabManager.SetCurrentOrganizationByNameResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).SetCurrentOrganizationByName(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.SetCurrentWorkspaceByNameResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.SetCurrentWorkspaceByName(LabManagerTest.LabManager.SetCurrentWorkspaceByNameRequest request) {
            return base.Channel.SetCurrentWorkspaceByName(request);
        }
        
        public void SetCurrentWorkspaceByName(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, string orgName, string workspaceName) {
            LabManagerTest.LabManager.SetCurrentWorkspaceByNameRequest inValue = new LabManagerTest.LabManager.SetCurrentWorkspaceByNameRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.orgName = orgName;
            inValue.workspaceName = workspaceName;
            LabManagerTest.LabManager.SetCurrentWorkspaceByNameResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).SetCurrentWorkspaceByName(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.GetCurrentOrganizationNameResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.GetCurrentOrganizationName(LabManagerTest.LabManager.GetCurrentOrganizationNameRequest request) {
            return base.Channel.GetCurrentOrganizationName(request);
        }
        
        public string GetCurrentOrganizationName(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader) {
            LabManagerTest.LabManager.GetCurrentOrganizationNameRequest inValue = new LabManagerTest.LabManager.GetCurrentOrganizationNameRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            LabManagerTest.LabManager.GetCurrentOrganizationNameResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).GetCurrentOrganizationName(inValue);
            return retVal.GetCurrentOrganizationNameResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.GetCurrentWorkspaceNameResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.GetCurrentWorkspaceName(LabManagerTest.LabManager.GetCurrentWorkspaceNameRequest request) {
            return base.Channel.GetCurrentWorkspaceName(request);
        }
        
        public string GetCurrentWorkspaceName(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader) {
            LabManagerTest.LabManager.GetCurrentWorkspaceNameRequest inValue = new LabManagerTest.LabManager.GetCurrentWorkspaceNameRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            LabManagerTest.LabManager.GetCurrentWorkspaceNameResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).GetCurrentWorkspaceName(inValue);
            return retVal.GetCurrentWorkspaceNameResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.GetConfigurationResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.GetConfiguration(LabManagerTest.LabManager.GetConfigurationRequest request) {
            return base.Channel.GetConfiguration(request);
        }
        
        public LabManagerTest.LabManager.Configuration GetConfiguration(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int id) {
            LabManagerTest.LabManager.GetConfigurationRequest inValue = new LabManagerTest.LabManager.GetConfigurationRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.id = id;
            LabManagerTest.LabManager.GetConfigurationResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).GetConfiguration(inValue);
            return retVal.GetConfigurationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.GetConfigurationByNameResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.GetConfigurationByName(LabManagerTest.LabManager.GetConfigurationByNameRequest request) {
            return base.Channel.GetConfigurationByName(request);
        }
        
        public Configuration[] GetConfigurationByName(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, string name) {
            LabManagerTest.LabManager.GetConfigurationByNameRequest inValue = new LabManagerTest.LabManager.GetConfigurationByNameRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.name = name;
            LabManagerTest.LabManager.GetConfigurationByNameResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).GetConfigurationByName(inValue);
            return retVal.GetConfigurationByNameResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.GetSingleConfigurationByNameResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.GetSingleConfigurationByName(LabManagerTest.LabManager.GetSingleConfigurationByNameRequest request) {
            return base.Channel.GetSingleConfigurationByName(request);
        }
        
        public LabManagerTest.LabManager.Configuration GetSingleConfigurationByName(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, string name) {
            LabManagerTest.LabManager.GetSingleConfigurationByNameRequest inValue = new LabManagerTest.LabManager.GetSingleConfigurationByNameRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.name = name;
            LabManagerTest.LabManager.GetSingleConfigurationByNameResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).GetSingleConfigurationByName(inValue);
            return retVal.GetSingleConfigurationByNameResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.ListConfigurationsResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.ListConfigurations(LabManagerTest.LabManager.ListConfigurationsRequest request) {
            return base.Channel.ListConfigurations(request);
        }
        
        public Configuration[] ListConfigurations(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationType) {
            LabManagerTest.LabManager.ListConfigurationsRequest inValue = new LabManagerTest.LabManager.ListConfigurationsRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.configurationType = configurationType;
            LabManagerTest.LabManager.ListConfigurationsResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).ListConfigurations(inValue);
            return retVal.ListConfigurationsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.ConfigurationPerformActionResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.ConfigurationPerformAction(LabManagerTest.LabManager.ConfigurationPerformActionRequest request) {
            return base.Channel.ConfigurationPerformAction(request);
        }
        
        public void ConfigurationPerformAction(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId, int action) {
            LabManagerTest.LabManager.ConfigurationPerformActionRequest inValue = new LabManagerTest.LabManager.ConfigurationPerformActionRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.configurationId = configurationId;
            inValue.action = action;
            LabManagerTest.LabManager.ConfigurationPerformActionResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).ConfigurationPerformAction(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.ConfigurationDeployResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.ConfigurationDeploy(LabManagerTest.LabManager.ConfigurationDeployRequest request) {
            return base.Channel.ConfigurationDeploy(request);
        }
        
        public void ConfigurationDeploy(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId, bool isCached, int fenceMode) {
            LabManagerTest.LabManager.ConfigurationDeployRequest inValue = new LabManagerTest.LabManager.ConfigurationDeployRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.configurationId = configurationId;
            inValue.isCached = isCached;
            inValue.fenceMode = fenceMode;
            LabManagerTest.LabManager.ConfigurationDeployResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).ConfigurationDeploy(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.ConfigurationUndeployResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.ConfigurationUndeploy(LabManagerTest.LabManager.ConfigurationUndeployRequest request) {
            return base.Channel.ConfigurationUndeploy(request);
        }
        
        public void ConfigurationUndeploy(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId) {
            LabManagerTest.LabManager.ConfigurationUndeployRequest inValue = new LabManagerTest.LabManager.ConfigurationUndeployRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.configurationId = configurationId;
            LabManagerTest.LabManager.ConfigurationUndeployResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).ConfigurationUndeploy(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.ConfigurationCloneResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.ConfigurationClone(LabManagerTest.LabManager.ConfigurationCloneRequest request) {
            return base.Channel.ConfigurationClone(request);
        }
        
        public int ConfigurationClone(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId, string newWorkspaceName) {
            LabManagerTest.LabManager.ConfigurationCloneRequest inValue = new LabManagerTest.LabManager.ConfigurationCloneRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.configurationId = configurationId;
            inValue.newWorkspaceName = newWorkspaceName;
            LabManagerTest.LabManager.ConfigurationCloneResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).ConfigurationClone(inValue);
            return retVal.ConfigurationCloneResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.ConfigurationCaptureResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.ConfigurationCapture(LabManagerTest.LabManager.ConfigurationCaptureRequest request) {
            return base.Channel.ConfigurationCapture(request);
        }
        
        public int ConfigurationCapture(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId, string newLibraryName) {
            LabManagerTest.LabManager.ConfigurationCaptureRequest inValue = new LabManagerTest.LabManager.ConfigurationCaptureRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.configurationId = configurationId;
            inValue.newLibraryName = newLibraryName;
            LabManagerTest.LabManager.ConfigurationCaptureResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).ConfigurationCapture(inValue);
            return retVal.ConfigurationCaptureResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.ConfigurationCheckoutResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.ConfigurationCheckout(LabManagerTest.LabManager.ConfigurationCheckoutRequest request) {
            return base.Channel.ConfigurationCheckout(request);
        }
        
        public int ConfigurationCheckout(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId, string workspaceName) {
            LabManagerTest.LabManager.ConfigurationCheckoutRequest inValue = new LabManagerTest.LabManager.ConfigurationCheckoutRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.configurationId = configurationId;
            inValue.workspaceName = workspaceName;
            LabManagerTest.LabManager.ConfigurationCheckoutResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).ConfigurationCheckout(inValue);
            return retVal.ConfigurationCheckoutResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.LiveLinkResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.LiveLink(LabManagerTest.LabManager.LiveLinkRequest request) {
            return base.Channel.LiveLink(request);
        }
        
        public string LiveLink(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, string configName) {
            LabManagerTest.LabManager.LiveLinkRequest inValue = new LabManagerTest.LabManager.LiveLinkRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.configName = configName;
            LabManagerTest.LabManager.LiveLinkResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).LiveLink(inValue);
            return retVal.LiveLinkResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.ConfigurationDeleteResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.ConfigurationDelete(LabManagerTest.LabManager.ConfigurationDeleteRequest request) {
            return base.Channel.ConfigurationDelete(request);
        }
        
        public void ConfigurationDelete(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId) {
            LabManagerTest.LabManager.ConfigurationDeleteRequest inValue = new LabManagerTest.LabManager.ConfigurationDeleteRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.configurationId = configurationId;
            LabManagerTest.LabManager.ConfigurationDeleteResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).ConfigurationDelete(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.ConfigurationSetPublicPrivateResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.ConfigurationSetPublicPrivate(LabManagerTest.LabManager.ConfigurationSetPublicPrivateRequest request) {
            return base.Channel.ConfigurationSetPublicPrivate(request);
        }
        
        public void ConfigurationSetPublicPrivate(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId, bool isPublic) {
            LabManagerTest.LabManager.ConfigurationSetPublicPrivateRequest inValue = new LabManagerTest.LabManager.ConfigurationSetPublicPrivateRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.configurationId = configurationId;
            inValue.isPublic = isPublic;
            LabManagerTest.LabManager.ConfigurationSetPublicPrivateResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).ConfigurationSetPublicPrivate(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.ListMachinesResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.ListMachines(LabManagerTest.LabManager.ListMachinesRequest request) {
            return base.Channel.ListMachines(request);
        }
        
        public Machine[] ListMachines(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId) {
            LabManagerTest.LabManager.ListMachinesRequest inValue = new LabManagerTest.LabManager.ListMachinesRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.configurationId = configurationId;
            LabManagerTest.LabManager.ListMachinesResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).ListMachines(inValue);
            return retVal.ListMachinesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.GetMachineResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.GetMachine(LabManagerTest.LabManager.GetMachineRequest request) {
            return base.Channel.GetMachine(request);
        }
        
        public LabManagerTest.LabManager.Machine GetMachine(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int machineId) {
            LabManagerTest.LabManager.GetMachineRequest inValue = new LabManagerTest.LabManager.GetMachineRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.machineId = machineId;
            LabManagerTest.LabManager.GetMachineResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).GetMachine(inValue);
            return retVal.GetMachineResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.GetMachineByNameResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.GetMachineByName(LabManagerTest.LabManager.GetMachineByNameRequest request) {
            return base.Channel.GetMachineByName(request);
        }
        
        public LabManagerTest.LabManager.Machine GetMachineByName(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int configurationId, string name) {
            LabManagerTest.LabManager.GetMachineByNameRequest inValue = new LabManagerTest.LabManager.GetMachineByNameRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.configurationId = configurationId;
            inValue.name = name;
            LabManagerTest.LabManager.GetMachineByNameResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).GetMachineByName(inValue);
            return retVal.GetMachineByNameResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LabManagerTest.LabManager.MachinePerformActionResponse LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap.MachinePerformAction(LabManagerTest.LabManager.MachinePerformActionRequest request) {
            return base.Channel.MachinePerformAction(request);
        }
        
        public void MachinePerformAction(LabManagerTest.LabManager.AuthenticationHeader AuthenticationHeader, int machineId, int action) {
            LabManagerTest.LabManager.MachinePerformActionRequest inValue = new LabManagerTest.LabManager.MachinePerformActionRequest();
            inValue.AuthenticationHeader = AuthenticationHeader;
            inValue.machineId = machineId;
            inValue.action = action;
            LabManagerTest.LabManager.MachinePerformActionResponse retVal = ((LabManagerTest.LabManager.LabManagerSOAPinterfaceSoap)(this)).MachinePerformAction(inValue);
        }
    }
}
